[{"M:\\Projects\\Sole\\Merchant-WebApp\\src\\index.js":"1","M:\\Projects\\Sole\\Merchant-WebApp\\src\\polyfill.js":"2","M:\\Projects\\Sole\\Merchant-WebApp\\src\\store.js":"3","M:\\Projects\\Sole\\Merchant-WebApp\\src\\App.js":"4","M:\\Projects\\Sole\\Merchant-WebApp\\src\\serviceWorker.js":"5","M:\\Projects\\Sole\\Merchant-WebApp\\src\\assets\\icons\\index.js":"6","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\pages\\page404\\Page404.js":"7","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\pages\\page500\\Page500.js":"8","M:\\Projects\\Sole\\Merchant-WebApp\\src\\assets\\icons\\logo-negative.js":"9","M:\\Projects\\Sole\\Merchant-WebApp\\src\\assets\\icons\\sygnet.js":"10","M:\\Projects\\Sole\\Merchant-WebApp\\src\\assets\\icons\\logo.js":"11","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\pages\\register\\Register.js":"12","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheLayout.js":"13","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\pages\\login\\Login.js":"14","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\index.js":"15","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeaderDropdown.js":"16","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheFooter.js":"17","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeader.js":"18","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeaderDropdownNotif.js":"19","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheContent.js":"20","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeaderDropdownMssg.js":"21","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeaderDropdownTasks.js":"22","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheSidebar.js":"23","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheAside.js":"24","M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\_nav.js":"25","M:\\Projects\\Sole\\Merchant-WebApp\\src\\routes.js":"26","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\dashboard\\Dashboard.js":"27","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\product\\ProductEdit.jsx":"28","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\product\\ProductCreate.jsx":"29","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\product\\ProductsListing.jsx":"30","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\productCategory\\ProductCategoryCreate.jsx":"31","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\productCategory\\ProductCategoryEdit.jsx":"32","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\productCategory\\ProductCategoriesListing.jsx":"33","M:\\Projects\\Sole\\Merchant-WebApp\\src\\reusable\\index.js":"34","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\index.js":"35","M:\\Projects\\Sole\\Merchant-WebApp\\src\\reusable\\ProBadge.js":"36","M:\\Projects\\Sole\\Merchant-WebApp\\src\\reusable\\DocsLink.js":"37","M:\\Projects\\Sole\\Merchant-WebApp\\src\\hooks\\useSubmitForm.jsx":"38","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\productService.js":"39","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\productCategoryService.js":"40","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\common\\index.js":"41","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\common\\logService.js":"42","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\common\\httpService.js":"43","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\account\\login\\Login.jsx":"44","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\authService.js":"45","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\email.jsx":"46","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\index.js":"47","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\string.jsx":"48","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\loader.jsx":"49","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\location\\LocationCreate.jsx":"50","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\location\\LocationsListing.jsx":"51","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\location\\LocationEdit.jsx":"52","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\localStorageService.js":"53","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\locationService.js":"54","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\location\\locationBasicForm\\locationBasicForm.jsx":"55","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\location\\index.js":"56","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\shared\\index.js":"57","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\shared\\addressForm\\addressForm.jsx":"58","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\commons\\index.js":"59","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\commons\\errorMessage.jsx":"60","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\location\\openingHoursForm\\openingHoursForm.jsx":"61","M:\\Projects\\Sole\\Merchant-WebApp\\src\\hooks\\index.js":"62","M:\\Projects\\Sole\\Merchant-WebApp\\src\\hooks\\useInputsChanged.jsx":"63","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\location\\openingHoursForm\\hourSwitcher.jsx":"64","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\time.jsx":"65","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\product\\productBasicForm.jsx":"66","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\menu\\MenuListing.jsx":"67","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\menu\\MenuCreate.jsx":"68","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\menu\\MenuEdit.jsx":"69","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\menuService.js":"70","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\account\\profile\\Profile.jsx":"71","M:\\Projects\\Sole\\Merchant-WebApp\\src\\validations\\index.js":"72","M:\\Projects\\Sole\\Merchant-WebApp\\src\\hooks\\useValidateFormData.jsx":"73","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\productCategory\\index.js":"74","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\productCategory\\productCategoryForm\\productCategoryForm.jsx":"75","M:\\Projects\\Sole\\Merchant-WebApp\\src\\validations\\schemas.js":"76","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\commons\\protectedRoute.jsx":"77","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\jwtHelpers.jsx":"78"},{"size":767,"mtime":1609110652368,"results":"79","hashOfConfig":"80"},{"size":1429,"mtime":1597214010000,"results":"81","hashOfConfig":"80"},{"size":363,"mtime":1597214010000,"results":"82","hashOfConfig":"80"},{"size":1387,"mtime":1609688683804,"results":"83","hashOfConfig":"80"},{"size":4686,"mtime":1597214010000,"results":"84","hashOfConfig":"80"},{"size":3883,"mtime":1597214010000,"results":"85","hashOfConfig":"80"},{"size":1294,"mtime":1597214010000,"results":"86","hashOfConfig":"80"},{"size":1313,"mtime":1597214010000,"results":"87","hashOfConfig":"80"},{"size":8827,"mtime":1597214010000,"results":"88","hashOfConfig":"80"},{"size":987,"mtime":1597214010000,"results":"89","hashOfConfig":"80"},{"size":8742,"mtime":1597214010000,"results":"90","hashOfConfig":"80"},{"size":2864,"mtime":1597214010000,"results":"91","hashOfConfig":"80"},{"size":657,"mtime":1597214010000,"results":"92","hashOfConfig":"80"},{"size":2891,"mtime":1606700686620,"results":"93","hashOfConfig":"80"},{"size":642,"mtime":1597214010000,"results":"94","hashOfConfig":"80"},{"size":2912,"mtime":1609800662737,"results":"95","hashOfConfig":"80"},{"size":562,"mtime":1609802856213,"results":"96","hashOfConfig":"80"},{"size":2526,"mtime":1609682054963,"results":"97","hashOfConfig":"80"},{"size":2543,"mtime":1597214010000,"results":"98","hashOfConfig":"80"},{"size":1168,"mtime":1609802789628,"results":"99","hashOfConfig":"80"},{"size":4788,"mtime":1597214010000,"results":"100","hashOfConfig":"80"},{"size":2253,"mtime":1597214010000,"results":"101","hashOfConfig":"80"},{"size":1400,"mtime":1609682065405,"results":"102","hashOfConfig":"80"},{"size":13034,"mtime":1597214010000,"results":"103","hashOfConfig":"80"},{"size":12044,"mtime":1609657449193,"results":"104","hashOfConfig":"80"},{"size":2665,"mtime":1609802112823,"results":"105","hashOfConfig":"80"},{"size":122,"mtime":1609656400347,"results":"106","hashOfConfig":"80"},{"size":805,"mtime":1607917921471,"results":"107","hashOfConfig":"80"},{"size":1190,"mtime":1609680156847,"results":"108","hashOfConfig":"80"},{"size":4275,"mtime":1609760857641,"results":"109","hashOfConfig":"80"},{"size":2582,"mtime":1609767002864,"results":"110","hashOfConfig":"80"},{"size":1159,"mtime":1609756273295,"results":"111","hashOfConfig":"80"},{"size":5494,"mtime":1609679230548,"results":"112","hashOfConfig":"80"},{"size":102,"mtime":1597214010000,"results":"113","hashOfConfig":"80"},{"size":448,"mtime":1609684997359,"results":"114","hashOfConfig":"80"},{"size":343,"mtime":1597214010000,"results":"115","hashOfConfig":"80"},{"size":581,"mtime":1597214010000,"results":"116","hashOfConfig":"80"},{"size":621,"mtime":1609762560120,"results":"117","hashOfConfig":"80"},{"size":682,"mtime":1609685049218,"results":"118","hashOfConfig":"80"},{"size":995,"mtime":1609652284055,"results":"119","hashOfConfig":"80"},{"size":131,"mtime":1607917921453,"results":"120","hashOfConfig":"80"},{"size":150,"mtime":1607917921455,"results":"121","hashOfConfig":"80"},{"size":1720,"mtime":1609336088695,"results":"122","hashOfConfig":"80"},{"size":5514,"mtime":1609336024200,"results":"123","hashOfConfig":"80"},{"size":491,"mtime":1609114060653,"results":"124","hashOfConfig":"80"},{"size":161,"mtime":1609070836198,"results":"125","hashOfConfig":"80"},{"size":216,"mtime":1609802846062,"results":"126","hashOfConfig":"80"},{"size":527,"mtime":1609070925658,"results":"127","hashOfConfig":"80"},{"size":300,"mtime":1609070873802,"results":"128","hashOfConfig":"80"},{"size":5681,"mtime":1609755164351,"results":"129","hashOfConfig":"80"},{"size":4469,"mtime":1609681433160,"results":"130","hashOfConfig":"80"},{"size":5960,"mtime":1609755590577,"results":"131","hashOfConfig":"80"},{"size":1338,"mtime":1609802734966,"results":"132","hashOfConfig":"80"},{"size":995,"mtime":1609682546408,"results":"133","hashOfConfig":"80"},{"size":4990,"mtime":1609764020023,"results":"134","hashOfConfig":"80"},{"size":190,"mtime":1609389807833,"results":"135","hashOfConfig":"80"},{"size":79,"mtime":1609389235289,"results":"136","hashOfConfig":"80"},{"size":3930,"mtime":1609681891793,"results":"137","hashOfConfig":"80"},{"size":134,"mtime":1609802080287,"results":"138","hashOfConfig":"80"},{"size":586,"mtime":1609569918376,"results":"139","hashOfConfig":"80"},{"size":3234,"mtime":1609764341177,"results":"140","hashOfConfig":"80"},{"size":222,"mtime":1609744752809,"results":"141","hashOfConfig":"80"},{"size":507,"mtime":1609556111605,"results":"142","hashOfConfig":"80"},{"size":3541,"mtime":1609681688178,"results":"143","hashOfConfig":"80"},{"size":606,"mtime":1609641917958,"results":"144","hashOfConfig":"80"},{"size":6667,"mtime":1609757866904,"results":"145","hashOfConfig":"80"},{"size":4020,"mtime":1609684796897,"results":"146","hashOfConfig":"80"},{"size":5578,"mtime":1609684680307,"results":"147","hashOfConfig":"80"},{"size":5871,"mtime":1609684825685,"results":"148","hashOfConfig":"80"},{"size":679,"mtime":1609685078162,"results":"149","hashOfConfig":"80"},{"size":5673,"mtime":1609687948010,"results":"150","hashOfConfig":"80"},{"size":54,"mtime":1609758340637,"results":"151","hashOfConfig":"80"},{"size":609,"mtime":1609763000577,"results":"152","hashOfConfig":"80"},{"size":110,"mtime":1609756737630,"results":"153","hashOfConfig":"80"},{"size":4058,"mtime":1609767058223,"results":"154","hashOfConfig":"80"},{"size":589,"mtime":1609760976164,"results":"155","hashOfConfig":"80"},{"size":1179,"mtime":1609802833442,"results":"156","hashOfConfig":"80"},{"size":276,"mtime":1609802623564,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"zu20qb",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"160"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"160"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"160"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"160"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"160"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"160"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"160"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"160"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"160"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"160"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"160"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"160"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"160"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"160"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"275","usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"160"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"281","usedDeprecatedRules":"160"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"160"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"160"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"160"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"160"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"160"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"160"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"160"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"321","usedDeprecatedRules":"160"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"324","usedDeprecatedRules":"160"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"160"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"160"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"160"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"160"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"160"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"M:\\Projects\\Sole\\Merchant-WebApp\\src\\index.js",[],["348","349"],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\polyfill.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\store.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\App.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\serviceWorker.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\assets\\icons\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\pages\\page404\\Page404.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\pages\\page500\\Page500.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\assets\\icons\\logo-negative.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\assets\\icons\\sygnet.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\assets\\icons\\logo.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\pages\\register\\Register.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheLayout.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\pages\\login\\Login.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeaderDropdown.js",["350","351"],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheFooter.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeader.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeaderDropdownNotif.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheContent.js",["352","353"],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeaderDropdownMssg.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheHeaderDropdownTasks.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheSidebar.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\TheAside.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\containers\\_nav.js",["354"],"import React from 'react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nexport default [\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Dashboard',\r\n    to: '/dashboard',\r\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\r\n    // badge: {\r\n    //   color: 'info',\r\n    //   text: 'NEW',\r\n    // }\r\n  },\r\n  // {\r\n  //   _tag: 'CSidebarNavTitle',\r\n  //   _children: ['Management']\r\n  // },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Locations',\r\n    to: '/locations',\r\n    icon: 'cil-drop',\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Products',\r\n    to: '/products',\r\n    icon: 'cil-drop',\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Product Category',\r\n    to: '/productcategories',\r\n    icon: 'cil-drop',\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Menu',\r\n    to: '/menus',\r\n    icon: 'cil-drop',\r\n  },\r\n  // {\r\n  //   _tag: 'CSidebarNavTitle',\r\n  //   _children: ['Theme']\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Colors',\r\n  //   to: '/theme/colors',\r\n  //   icon: 'cil-drop',\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Typography',\r\n  //   to: '/theme/typography',\r\n  //   icon: 'cil-pencil',\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavTitle',\r\n  //   _children: ['Components']\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Base',\r\n  //   route: '/base',\r\n  //   icon: 'cil-puzzle',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Breadcrumb',\r\n  //       to: '/base/breadcrumbs',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Cards',\r\n  //       to: '/base/cards',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Carousel',\r\n  //       to: '/base/carousels',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Collapse',\r\n  //       to: '/base/collapses',\r\n  //     },\r\n  //     /*\r\n  //     {\r\n  //       name: 'Dropdowns',\r\n  //       to: '/base/dropdowns',\r\n  //     },*/\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Jumbotron',\r\n  //       to: '/base/jumbotrons',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'List group',\r\n  //       to: '/base/list-groups',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Navs',\r\n  //       to: '/base/navs',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Navbars',\r\n  //       to: '/base/navbars',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Pagination',\r\n  //       to: '/base/paginations',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Popovers',\r\n  //       to: '/base/popovers',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Progress',\r\n  //       to: '/base/progress-bar',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Switches',\r\n  //       to: '/base/switches',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Tabs',\r\n  //       to: '/base/tabs',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Tooltips',\r\n  //       to: '/base/tooltips',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Buttons',\r\n  //   route: '/buttons',\r\n  //   icon: 'cil-cursor',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Buttons',\r\n  //       to: '/buttons/buttons',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Brand buttons',\r\n  //       to: '/buttons/brand-buttons',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Buttons groups',\r\n  //       to: '/buttons/button-groups',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Dropdowns',\r\n  //       to: '/buttons/button-dropdowns',\r\n  //     }\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Charts',\r\n  //   to: '/charts',\r\n  //   icon: 'cil-chart-pie'\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Editors',\r\n  //   route: '/editors',\r\n  //   icon: 'cil-code',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Code Editors',\r\n  //       to: '/editors/code-editors',\r\n  //       badge: {\r\n  //         color: 'danger',\r\n  //         text: 'PRO',\r\n  //       },\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Rich Text Editor',\r\n  //       to: '/editors/text-editors',\r\n  //       badge: {\r\n  //         color: 'danger',\r\n  //         text: 'PRO',\r\n  //       },\r\n  //     }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Forms',\r\n  //   route: '/forms',\r\n  //   icon: 'cil-notes',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Basic Forms',\r\n  //       to: '/forms/basic-forms',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Advanced Forms',\r\n  //       to: '/forms/advanced-forms',\r\n  //       badge: {\r\n  //         color: 'danger',\r\n  //         text: 'PRO'\r\n  //       }\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Validation',\r\n  //       to: '/forms/validation-forms',\r\n  //       badge: {\r\n  //         color: 'danger',\r\n  //         text: 'PRO'\r\n  //       }\r\n  //     }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Google Maps',\r\n  //   to: '/google-maps',\r\n  //   icon: 'cil-map',\r\n  //   badge: {\r\n  //     color: 'danger',\r\n  //     text: 'PRO'\r\n  //   }\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Icons',\r\n  //   route: '/icons',\r\n  //   icon: 'cil-star',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'CoreUI Free',\r\n  //       to: '/icons/coreui-icons',\r\n  //       badge: {\r\n  //         color: 'success',\r\n  //         text: 'NEW',\r\n  //       },\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'CoreUI Flags',\r\n  //       to: '/icons/flags',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'CoreUI Brands',\r\n  //       to: '/icons/brands',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Notifications',\r\n  //   route: '/notifications',\r\n  //   icon: 'cil-bell',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Alerts',\r\n  //       to: '/notifications/alerts',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Badges',\r\n  //       to: '/notifications/badges',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Modal',\r\n  //       to: '/notifications/modals',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Toaster',\r\n  //       to: '/notifications/toaster'\r\n  //     }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Plugins',\r\n  //   route: '/plugins',\r\n  //   icon: 'cil-input-power',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Calendar',\r\n  //       to: '/plugins/calendar',\r\n  //       badge: {\r\n  //         color: 'danger',\r\n  //         text: 'PRO'\r\n  //       }\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Draggable',\r\n  //       to: '/plugins/draggable',\r\n  //       badge: {\r\n  //         color: 'danger',\r\n  //         text: 'PRO'\r\n  //       }\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Spinners',\r\n  //       to: '/plugins/spinners',\r\n  //       badge: {\r\n  //         color: 'danger',\r\n  //         text: 'PRO'\r\n  //       }\r\n  //     }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Tables',\r\n  //   route: '/tables',\r\n  //   icon: 'cil-list',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Basic Tables',\r\n  //       to: '/tables/tables',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Advanced Tables',\r\n  //       to: '/tables/advanced-tables'\r\n  //     }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Widgets',\r\n  //   to: '/widgets',\r\n  //   icon: 'cil-calculator',\r\n  //   badge: {\r\n  //     color: 'info',\r\n  //     text: 'NEW',\r\n  //   },\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDivider'\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavTitle',\r\n  //   _children: ['Extras'],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Pages',\r\n  //   route: '/pages',\r\n  //   icon: 'cil-star',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Login',\r\n  //       to: '/login',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Register',\r\n  //       to: '/register',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Error 404',\r\n  //       to: '/404',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Error 500',\r\n  //       to: '/500',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Disabled',\r\n  //   icon: 'cil-ban',\r\n  //   badge: {\r\n  //     color: 'secondary',\r\n  //     text: 'NEW',\r\n  //   },\r\n  //   addLinkClass: 'c-disabled',\r\n  //   'disabled': true\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Apps',\r\n  //   route: '/apps',\r\n  //   icon: 'cil-layers',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavDropdown',\r\n  //       name: 'Invoicing',\r\n  //       route: '/apps/invoicing',\r\n  //       icon: 'cil-spreadsheet',\r\n  //       _children: [\r\n  //         {\r\n  //           _tag: 'CSidebarNavItem',\r\n  //           name: 'Invoice',\r\n  //           to: '/apps/invoicing/invoice',\r\n  //           badge: {\r\n  //             color: 'danger',\r\n  //             text: 'PRO'\r\n  //           }\r\n  //         }\r\n  //       ]\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavDropdown',\r\n  //       name: 'Email',\r\n  //       route: '/apps/email',\r\n  //       icon: 'cil-envelope-open',\r\n  //       _children: [\r\n  //         {\r\n  //           _tag: 'CSidebarNavItem',\r\n  //           name: 'Inbox',\r\n  //           to: '/apps/email/inbox',\r\n  //           badge: {\r\n  //             color: 'danger',\r\n  //             text: 'PRO',\r\n  //           },\r\n  //         },\r\n  //         {\r\n  //           _tag: 'CSidebarNavItem',\r\n  //           name: 'Message',\r\n  //           to: '/apps/email/message',\r\n  //           badge: {\r\n  //             color: 'danger',\r\n  //             text: 'PRO',\r\n  //           },\r\n  //         },\r\n  //         {\r\n  //           _tag: 'CSidebarNavItem',\r\n  //           name: 'Compose',\r\n  //           to: '/apps/email/compose',\r\n  //           badge: {\r\n  //             color: 'danger',\r\n  //             text: 'PRO',\r\n  //           },\r\n  //         },\r\n  //       ],\r\n  //     },\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDivider',\r\n  //   className: 'm-2'\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavTitle',\r\n  //   _children: ['Labels']\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Label danger',\r\n  //   to: '',\r\n  //   icon: {\r\n  //     name: 'cil-star',\r\n  //     className: 'text-danger'\r\n  //   },\r\n  //   label: true\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Label info',\r\n  //   to: '',\r\n  //   icon: {\r\n  //     name: 'cil-star',\r\n  //     className: 'text-info'\r\n  //   },\r\n  //   label: true\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Label warning',\r\n  //   to: '',\r\n  //   icon: {\r\n  //     name: 'cil-star',\r\n  //     className: 'text-warning'\r\n  //   },\r\n  //   label: true\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDivider',\r\n  //   className: 'm-2'\r\n  // }\r\n]\r\n\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\routes.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\dashboard\\Dashboard.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\product\\ProductEdit.jsx",["355","356","357","358","359","360"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination,\r\n} from \"@coreui/react\";\r\n\r\nimport { ProductService } from \"../../services\";\r\n\r\nconst ProductEdit = () => {\r\n  const [product, setProduct] = useState([]);\r\n\r\n   useEffect(() => {\r\n    ProductService.Get(\"qweqwewqe\").then((response) => {\r\n      setProduct(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xl={6}>\r\n        <CCard>\r\n          <CCardHeader>Edit Product</CCardHeader>\r\n          <CCardBody>      \r\n            dqwdqwdqwdqwdwqdwq     \r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default ProductEdit;","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\product\\ProductCreate.jsx",["361","362","363","364"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CForm,\r\n  CCol,\r\n  CRow,\r\n} from \"@coreui/react\";\r\n\r\nimport { ProductService } from \"../../services\";\r\n\r\nimport ProductBasicForm from \"../../components/product/productBasicForm\";\r\n\r\nconst ProductCreate = () => {\r\n  const handleSubmit = async (inputs) => {\r\n    ProductService.Create(inputs).then((response) => {\r\n      alert(\"Product created: \" + response.data.id);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CForm noValidate>\r\n      <CRow>\r\n        <CCol\r\n          xs={12}\r\n          sm={12}\r\n          md={6}\r\n          lg={6}\r\n          xl={6}\r\n          xxl={6}\r\n          className=\"offset-xs-0 offset-sm-0 offset-md-3 offset-lg-3 offset-xl-3 offset-xxl-3\"\r\n        >\r\n          <CCard>\r\n            <CCardHeader>\r\n              <div className=\"font-weight-bold\">Details</div>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <ProductBasicForm OnSubmit={handleSubmit} />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CForm>\r\n  );\r\n};\r\n\r\nexport default ProductCreate;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\product\\ProductsListing.jsx",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\productCategory\\ProductCategoryCreate.jsx",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\productCategory\\ProductCategoryEdit.jsx",["365","366","367","368"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,  \r\n  CRow,\r\n} from \"@coreui/react\";\r\n\r\n\r\nimport { ProductCategoryService } from \"../../services\";\r\n\r\nimport { ProductCategoryForm } from \"../../components/productCategory\";\r\n\r\nconst ProductCategoryEdit = () => {\r\n\r\n  const handleSubmit = async (inputs) => {\r\n    ProductCategoryService.Create(inputs).then((response) => {\r\n      alert(\"ProductCategory created: \" + response.data.id);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={6}\r\n        xl={6}\r\n        xxl={6}\r\n        className=\"offset-xs-0 offset-sm-0 offset-md-3 offset-lg-3 offset-xl-3 offset-xxl-3\"\r\n      >\r\n        <CCard>\r\n          <CCardHeader>\r\n            <div className=\"font-weight-bold\">Edit Product Category</div>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <ProductCategoryForm OnSubmit={handleSubmit} />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default ProductCategoryEdit;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\productCategory\\ProductCategoriesListing.jsx",["369","370","371"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { freeSet } from \"@coreui/icons\";\r\nimport { ProductCategoryService } from \"../../services\";\r\n\r\nconst ProductCategoriesListing = () => {\r\n  const [productCategories, setProductCategories] = useState([]);\r\n\r\n  const history = useHistory();\r\n  // const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  // const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  // const [page, setPage] = useState(currentPage)\r\n\r\n  // const pageChange = newPage => {\r\n  //   currentPage !== newPage && history.push(`/users?page=${newPage}`)\r\n  // }\r\n\r\n  useEffect(() => {\r\n    listItems();\r\n  }, []);\r\n\r\n  const listItems = async () => {\r\n    ProductCategoryService.List().then((response) => {\r\n      setProductCategories(response.data);\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   currentPage !== page && setPage(currentPage)\r\n  // }, [currentPage, page])\r\n\r\n  const redirectToCreatePage = () => {\r\n    history.push(`/productcategory/create`);\r\n  };\r\n\r\n  const handleEditItem = (item) => {\r\n    history.push(`/productcategory/edit/${item.id}`);\r\n  };\r\n\r\n  const handleDeleteItem = (item) => {\r\n    ProductCategoryService.Delete(item.id)\r\n      .then((response) => {\r\n        console.log(response);\r\n        listItems();\r\n      })\r\n      .catch((err) => {})\r\n      .finally(() => {});\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      key: \"name\",\r\n      label: \"Name\",\r\n      _style: { width: \"40%\" },\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      key: \"parent_category\",\r\n      label: \"Parent\",\r\n      _style: { width: \"30%\" },\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      key: \"created_at\",\r\n      label: \"Created Date\",\r\n      _style: { width: \"20%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n    {\r\n      key: \"edit_button\",\r\n      label: \"\",\r\n      _style: { width: \"10%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n    {\r\n      key: \"delete_button\",\r\n      label: \"\",\r\n      _style: { width: \"10%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12} sm={12} md={8} lg={12} xl={12} xxl={12} className=\"p-0\">\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol\r\n                xs={10}\r\n                sm={10}\r\n                md={10}\r\n                lg={10}\r\n                xl={10}\r\n                xxl={10}\r\n                className=\"font-weight-bold align-middle\"\r\n              >\r\n                <div className=\"font-weight-bold align-middle\">\r\n                  Product Categories\r\n                </div>\r\n              </CCol>\r\n              <CCol\r\n                xs={2}\r\n                sm={2}\r\n                md={2}\r\n                lg={2}\r\n                xl={2}\r\n                xxl={2}\r\n                className=\"text-right\"\r\n              >\r\n                <CButton color=\"info\" onClick={redirectToCreatePage} className=\"text-white\">\r\n                  <CIcon content={freeSet.cilPlus} />\r\n                </CButton>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CDataTable\r\n              items={productCategories}\r\n              fields={fields}\r\n              columnFilter\r\n              //tableFilter\r\n              hover\r\n              sorter\r\n              itemsPerPage={50}\r\n              //activePage={page}\r\n              //clickableRows\r\n              scopedSlots={{\r\n                name: (item, index) => {\r\n                  return (\r\n                    <td>\r\n                      <Link to={`/productcategory/edit/${item.id}`}>\r\n                        {item.name}\r\n                      </Link>\r\n                    </td>\r\n                  );\r\n                },\r\n                parent_category: (item, index) => {\r\n                  if (item && item.parent_category) {\r\n                    return <td>{item.parent_category.name} </td>;\r\n                  }\r\n\r\n                  return <td></td>;\r\n                },\r\n                created_at: (item, index) => {\r\n                  return <td>{item.created_at}</td>;\r\n                },\r\n                edit_button: (item, index) => {\r\n                  return (\r\n                    <td>\r\n                      <CButton\r\n                        color=\"warning\"\r\n                        className=\"text-white\"\r\n                        onClick={() => handleEditItem(item)}\r\n                      >\r\n                        <CIcon content={freeSet.cilPen} />\r\n                      </CButton>\r\n                    </td>\r\n                  );\r\n                },\r\n                delete_button: (item, index) => {\r\n                  return (\r\n                    <td>\r\n                      <CButton\r\n                        color=\"danger\"\r\n                        onClick={() => handleDeleteItem(item)}\r\n                      >\r\n                        <CIcon content={freeSet.cilTrash} />\r\n                      </CButton>\r\n                    </td>\r\n                  );\r\n                },\r\n              }}\r\n            ></CDataTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default ProductCategoriesListing;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\reusable\\index.js",[],["372","373"],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\reusable\\ProBadge.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\reusable\\DocsLink.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\hooks\\useSubmitForm.jsx",["374"],"import React, { useState } from \"react\";\r\n\r\nconst useSubmitForm = (initialValues, inputsUpdated, submit) => {\r\n  const [inputs, setInputs] = React.useState(initialValues);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    submit(event);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    event.persist();\r\n\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n\r\n    inputsUpdated(inputs);\r\n  };\r\n\r\n  return {\r\n    inputs,\r\n    handleInputChange,\r\n    handleSubmit,    \r\n  };\r\n};\r\n\r\nexport default useSubmitForm;","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\productService.js",["375"],"import { HTTPService } from \"./common\";\r\n\r\nconst apiEndpoint = process.env.REACT_APP_MERCHANT_API_URL + \"/products\";\r\n\r\nasync function List() {  \r\n  return await HTTPService.get(apiEndpoint);\r\n}\r\n\r\nasync function Get(id) {  \r\n  return await HTTPService.get(apiEndpoint + \"/\" + encodeURIComponent(id));\r\n}\r\n\r\nasync function Create(data) {  \r\n  return await HTTPService.post(apiEndpoint, data);\r\n}\r\n\r\nasync function Edit(data) {  \r\n  return await HTTPService.put(apiEndpoint + \"/\" + data.id, data);\r\n}\r\n\r\nasync function Delete(id) {  \r\n  return await HTTPService.delete(encodeURI(apiEndpoint + \"/\" + id));\r\n}\r\n\r\nexport default {\r\n  List,\r\n  Get,\r\n  Create,\r\n  Edit,\r\n  Delete,  \r\n};\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\productCategoryService.js",["376","377"],"import { HTTPService } from \"./common\";\r\n\r\nconst apiEndpoint = process.env.REACT_APP_MERCHANT_API_URL + \"/ProductCategories\";\r\nconst clientId = process.env.REACT_APP_CLIENT\r\n\r\nasync function List() {  \r\n  return await HTTPService.get(apiEndpoint);\r\n}\r\n\r\nasync function ListParent() {  \r\n  return await HTTPService.get(apiEndpoint + \"/parent/\");\r\n}\r\n\r\nasync function GetsByParentId(id) {  \r\n  return await HTTPService.get(apiEndpoint + \"/parent/\" + encodeURIComponent(id));\r\n}\r\n\r\nasync function Get(id) {  \r\n  return await HTTPService.get(apiEndpoint + \"/\" + encodeURIComponent(id));\r\n}\r\n\r\nasync function Create(data) {  \r\n  return await HTTPService.post(apiEndpoint, data);\r\n}\r\n\r\nasync function Edit(data) {  \r\n  return await HTTPService.put(apiEndpoint + \"/\" + data.id, data);\r\n}\r\n\r\nasync function Delete(id) {  \r\n  return await HTTPService.delete(encodeURI(apiEndpoint + \"/\" + id));\r\n}\r\n\r\nexport default {\r\n  List,\r\n  ListParent,\r\n  Get,\r\n  GetsByParentId,\r\n  Create,\r\n  Edit,\r\n  Delete,\r\n};\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\common\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\common\\logService.js",["378"],"function log(error) {\r\n  console.log(error);\r\n}\r\n\r\nfunction error(error) {\r\n    console.error(error);\r\n  }\r\n\r\nexport default {  \r\n  log,\r\n  error,\r\n};","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\common\\httpService.js",["379"],"import axios from \"axios\";\r\nimport logger from \"./logService\";\r\n\r\nconst tokenKey = \"token\";\r\nconst AuthorizationKey = \"Authorization\";\r\n\r\naxios.defaults.headers.common[AuthorizationKey] = \"Bearer \" + getJwt();\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.error(error);\r\n    //toast.error(\"An unexpected error occurrred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwtfromLocalStorage() {\r\n  const jwt = localStorage.getItem(tokenKey);\r\n  axios.defaults.headers.common[AuthorizationKey] = \"Bearer \" + jwt;\r\n}\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[AuthorizationKey] = \"Bearer \" + jwt;\r\n}\r\n\r\nfunction getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nfunction setBearerAuthorization(jwt) {\r\n  axios.defaults.headers.common[AuthorizationKey] = \"Bearer \" + jwt;\r\n}\r\n\r\nfunction addBearerAuthorization() {\r\n  axios.defaults.headers.common[AuthorizationKey] = \"Bearer \" + getJwt();\r\n}\r\n\r\nfunction removeBearerAuthorization() {\r\n  delete axios.defaults.headers.common[AuthorizationKey];\r\n}\r\n\r\nfunction addHeader(key, value) {\r\n  axios.defaults.headers.common[key] = value;\r\n}\r\n\r\nfunction addAccessControlAllowOrigin() {\r\n  axios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  patch: axios.patch,\r\n  fetch: axios.fetch,\r\n  setJwt,\r\n  setJwtfromLocalStorage,\r\n  addBearerAuthorization,\r\n  setBearerAuthorization,\r\n  removeBearerAuthorization,\r\n  addHeader,\r\n  addAccessControlAllowOrigin,\r\n};","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\account\\login\\Login.jsx",["380","381","382","383","384","385","386","387","388","389","390"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport useSubmitForm from \"../../../hooks/useSubmitForm\";\nimport { AuthService, LocalStorageService } from \"../../../services\";\nimport { email as emailHelpers } from \"../../../helpers\";\n\nconst Login = () => {\n  const intialValues = {\n    username: \"rafamuniz_localrest@gmail.com\",\n    password: \"Password123$\",\n  };\n\n  const [formValues, setFormValues] = useState(intialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [formValid, setFormValid] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {}, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n\n    AuthService.Login(inputs)\n      .then((response) => {\n        LocalStorageService.saveToken(response.data.access_token);\n      })\n      .finally(() => {\n        \n      });  \n  };\n\n  const handleForgotPassword = async (event) => {\n    event.preventDefault();\n\n    const { data } = this.state;\n    const { history } = this.props;\n\n    if (data.username !== \"\" && emailHelpers.validate(data.username)) {\n      history.push(\"/account/forgotpassword/?email=\" + data.username);\n    } else {\n      history.push(\"/account/forgotpassword\");\n    }\n  };\n\n  const inputsUpdatedCallback = (inputs) => {\n    //setInputsUpdated(!inputsUpdated);\n  };\n\n  const submit = (event) => {\n    const { name, value } = event.target;\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  const { inputs, handleInputChange, handleSubmit } = useSubmitForm(\n    intialValues,\n    inputsUpdatedCallback,\n    handleLogin\n  );\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={inputs.username}\n                        onChange={handleInputChange}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        id=\"password\"\n                        name=\"password\"\n                        value={inputs.password}\n                        onChange={handleInputChange}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton\n                          color=\"primary\"\n                          className=\"px-4\"\n                          onClick={handleSubmit}\n                          disabled={formValid}\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard\n                className=\"text-white bg-primary py-5 d-md-down-none\"\n                style={{ width: \"44%\" }}\n              >\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit,\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\n                      aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton\n                        color=\"primary\"\n                        className=\"mt-3\"\n                        active\n                        tabIndex={-1}\n                      >\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\authService.js",["391"],"import { HTTPService } from \"./common\";\r\n\r\nconst apiEndpoint = process.env.REACT_APP_IDENTITY_API_URL + \"/auth\";\r\n\r\nasync function Login(data) {\r\n    //HTTPService.addHeader('Access-Control-Allow-Origin', 'https://localhost:3000');\r\n    return await HTTPService.post(apiEndpoint + \"/login\", data);\r\n}\r\n\r\nasync function Logout() {\r\n    //HTTPService.addBearerAuthorization();    \r\n    return await HTTPService.post(apiEndpoint + \"/logout\");\r\n}\r\n\r\nexport default {\r\n    Login,\r\n    Logout,\r\n};","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\email.jsx",["392"],"import * as EmailValidator from 'email-validator';\r\n\r\nfunction validate(email) {\r\n  return EmailValidator.validate(email);\r\n}\r\n\r\nexport default {\r\n  validate,\r\n}","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\string.jsx",["393"],"function containsAny(str, substrings) {\r\n  if (substrings !== undefined) {\r\n    for (var i = 0; i !== substrings.length; i++) {\r\n      var substring = substrings[i];\r\n      if (str.indexOf(substring) !== -1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction countChars(str) {\r\n  let count = 0;\r\n\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (str[i].match(/[a-z]/i)) {\r\n      count += 1;\r\n    }\r\n  }\r\n\r\n  return count;\r\n}\r\n\r\nexport default {\r\n  containsAny,\r\n  countChars,\r\n};","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\loader.jsx",["394"],"function show(props) {\r\n  try {\r\n    props.onLoading(true);\r\n  } catch {}\r\n}\r\n\r\nfunction hide(props) {\r\n  try {\r\n    props.onLoading(false);\r\n  } catch {}\r\n}\r\n\r\nfunction loading(props, show) {\r\n  try {\r\n    props.onLoading(show);\r\n  } catch {}\r\n}\r\n\r\nexport default {\r\n  loading,\r\n  hide,\r\n  show,\r\n};","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\location\\LocationCreate.jsx",["395","396","397","398"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n} from \"@coreui/react\";\r\n\r\nimport { LocationService } from \"../../services\";\r\n\r\nimport { AddressForm } from \"../../components/shared\";\r\nimport { LocationBasicForm, OpeningHoursForm } from \"../../components/location\";\r\nimport { ErrorMessage } from \"../../components/commons\";\r\n\r\nconst LocationCreate = (props) => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n    address: {},\r\n    opening_hours: {\r\n      sunday: {\r\n        weekday: 1,\r\n        weekday_name: \"Sunday\",\r\n        hours: [],\r\n      },\r\n      monday: {\r\n        weekday: 2,\r\n        weekday_name: \"Monday\",\r\n        hours: [],\r\n      },\r\n      tuesday: {\r\n        weekday: 3,\r\n        weekday_name: \"Tuesday\",\r\n        hours: [],\r\n      },\r\n      wednesday: {\r\n        weekday: 4,\r\n        weekday_name: \"Wednesday\",\r\n        hours: [],\r\n      },\r\n      thursday: {\r\n        weekday: 5,\r\n        weekday_name: \"Thursday\",\r\n        hours: [],\r\n      },\r\n      friday: {\r\n        weekday: 6,\r\n        weekday_name: \"Friday\",\r\n        hours: [],\r\n      },\r\n      saturday: {\r\n        weekday: 7,\r\n        weekday_name: \"Saturday\",\r\n        hours: [],\r\n      },\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const [validLocationBasicForm, setValidLocationBasicForm] = useState(false);\r\n  const [validAddressForm, setValidAddressForm] = useState(false);\r\n  const [validOpeningHoursForm, setValidOpeningHoursForm] = useState(true);\r\n\r\n  useEffect(() => {}, [data]);\r\n\r\n  const handleBasicLocationFormDataUpdated = (formData) => {\r\n    let newData = { ...data };\r\n    const address = formData.address;\r\n    const opening_hours = formData.opening_hours;\r\n\r\n    newData = formData;\r\n    newData.address = address;\r\n    newData.opening_hours = opening_hours;\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  const handleBasicLocationFormValid = (valid) => {\r\n    setValidLocationBasicForm(valid);\r\n  };\r\n\r\n  const handleAddressFormValid = (valid) => {\r\n    setValidAddressForm(valid);\r\n  };\r\n\r\n  const handleAddressFormDataUpdated = (formData) => {\r\n    const newData = { ...data };\r\n    newData.address = formData;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleOpeningHoursFormValid = (valid) => {\r\n    validOpeningHoursForm(valid);\r\n  };\r\n\r\n  const handleOpeningHoursFormUpdated = (formData) => {\r\n    const newData = { ...data };\r\n    newData.opening_hours = formData;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // console.log(validLocationBasicForm);\r\n    // console.log(validAddressForm);\r\n    // console.log(validOpeningHoursForm);\r\n\r\n    if (validLocationBasicForm && validAddressForm && validOpeningHoursForm) {\r\n      LocationService.Create(data)\r\n        .then((response) => {\r\n          props.history.push(\"/locations\");\r\n        })\r\n        .catch((err) => {})\r\n        .finally(() => {});\r\n    } else {\r\n      console.log(\"Forms are not valid\");\r\n      setErrors({ ...errors, [\"forms\"]: \"Please check all fields\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CRow >\r\n    <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12} className=\"p-0\">\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <ErrorMessage message={errors.forms} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CForm noValidate>\r\n        <CRow>\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Details</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <LocationBasicForm\r\n                  //item={locationBasicFormData}\r\n                  onItemValid={handleBasicLocationFormValid}\r\n                  onItemUpdated={handleBasicLocationFormDataUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Opening Hours</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <OpeningHoursForm\r\n                  item={data.opening_hours}\r\n                  onValidForm={handleOpeningHoursFormValid}\r\n                  onItemUpdated={handleOpeningHoursFormUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow>\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Address</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <AddressForm\r\n                  onItemValid={handleAddressFormValid}\r\n                  onItemUpdated={handleAddressFormDataUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow>\r\n          <CCol xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            <CButton block color=\"primary\" onClick={handleSubmit}>\r\n              Create\r\n            </CButton>\r\n          </CCol>\r\n          <CCol xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            <CButton block color=\"primary\">\r\n              Back\r\n            </CButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CForm>\r\n  </CCol>\r\n        </CRow>\r\n  );\r\n};\r\n\r\nexport default LocationCreate;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\location\\LocationsListing.jsx",["399"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { freeSet } from \"@coreui/icons\";\r\n\r\nimport { LocationService } from \"../../services\";\r\n\r\nconst LocationsListing = () => {\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    listItems();\r\n  }, []);\r\n\r\n  const listItems = async () => {\r\n    LocationService.List()\r\n      .then((response) => {\r\n        setLocations(response.data);\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  const redirectToCreatePage = () => {\r\n    history.push(`/location/create`);\r\n  };\r\n\r\n  const handleEditItem = (item) => {\r\n    history.push(`/location/edit/${item.id}`);\r\n  };\r\n\r\n  const handleDeleteItem = (item) => {\r\n    LocationService.Delete(item.id)\r\n      .then((response) => {\r\n        listItems();\r\n      })\r\n      .catch((err) => {})\r\n      .finally(() => {});\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      key: \"name\",\r\n      label: \"Name\",\r\n      _style: { width: \"40%\" },\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      key: \"email\",\r\n      label: \"Email\",\r\n      _style: { width: \"30%\" },\r\n      sorter: true,\r\n      filter: true,\r\n    },\r\n    {\r\n      key: \"edit_button\",\r\n      label: \"\",\r\n      _style: { width: \"10%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n    {\r\n      key: \"delete_button\",\r\n      label: \"\",\r\n      _style: { width: \"10%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12} className=\"p-0\">\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol\r\n                xs={10}\r\n                sm={10}\r\n                md={10}\r\n                lg={10}\r\n                xl={10}\r\n                xxl={10}\r\n                className=\"font-weight-bold align-middle\"\r\n              >\r\n                <div className=\"font-weight-bold align-middle\">Locations</div>\r\n              </CCol>\r\n              <CCol\r\n                xs={2}\r\n                sm={2}\r\n                md={2}\r\n                lg={2}\r\n                xl={2}\r\n                xxl={2}\r\n                className=\"text-right pr-0\"\r\n              >\r\n                <CButton color=\"info\" onClick={redirectToCreatePage}>\r\n                  <CIcon content={freeSet.cilPlus} />\r\n                </CButton>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CDataTable\r\n              items={locations}\r\n              fields={fields}\r\n              columnFilter\r\n              //tableFilter\r\n              hover\r\n              striped\r\n              itemsPerPage={20}\r\n              scopedSlots={{\r\n                name: (item, index) => {\r\n                  return (\r\n                    <td>                      \r\n                      <Link to={`/location/edit/${item.id}`}>{item.name}</Link>\r\n                    </td>\r\n                  );\r\n                },\r\n                email: (item, index) => {\r\n                  if (item && item.email) {\r\n                    return <td><a href={``}>{item.email}</a></td>;\r\n                  }\r\n\r\n                  return <td></td>;\r\n                },\r\n                edit_button: (item, index) => {\r\n                  return (\r\n                    <td>\r\n                      <CButton\r\n                        color=\"warning\"\r\n                        className=\"text-white\"\r\n                        onClick={() => handleEditItem(item)}\r\n                      >\r\n                        <CIcon content={freeSet.cilPen} />\r\n                      </CButton>\r\n                    </td>\r\n                  );\r\n                },\r\n                delete_button: (item, index) => {\r\n                  return (\r\n                    <td>\r\n                      <CButton\r\n                        color=\"danger\"\r\n                        onClick={() => handleDeleteItem(item)}\r\n                      >\r\n                        <CIcon content={freeSet.cilTrash} />\r\n                      </CButton>\r\n                    </td>\r\n                  );\r\n                },\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default LocationsListing;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\location\\LocationEdit.jsx",["400","401","402","403","404"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation, useParams, } from \"react-router-dom\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n} from \"@coreui/react\";\r\n\r\nimport { LocationService } from \"../../services\";\r\n\r\nimport { AddressForm } from \"../../components/shared\";\r\nimport { LocationBasicForm, OpeningHoursForm } from \"../../components/location\";\r\nimport { ErrorMessage } from \"../../components/commons\";\r\n\r\nconst LocationEdit = (props) => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n    address: {},\r\n    opening_hours: {\r\n      sunday: {\r\n        weekday: 1,\r\n        weekday_name: \"Sunday\",\r\n        hours: [],\r\n      },\r\n      monday: {\r\n        weekday: 2,\r\n        weekday_name: \"Monday\",\r\n        hours: [],\r\n      },\r\n      tuesday: {\r\n        weekday: 3,\r\n        weekday_name: \"Tuesday\",\r\n        hours: [],\r\n      },\r\n      wednesday: {\r\n        weekday: 4,\r\n        weekday_name: \"Wednesday\",\r\n        hours: [],\r\n      },\r\n      thursday: {\r\n        weekday: 5,\r\n        weekday_name: \"Thursday\",\r\n        hours: [],\r\n      },\r\n      friday: {\r\n        weekday: 6,\r\n        weekday_name: \"Friday\",\r\n        hours: [],\r\n      },\r\n      saturday: {\r\n        weekday: 7,\r\n        weekday_name: \"Saturday\",\r\n        hours: [],\r\n      },\r\n    },\r\n  });\r\n  \r\n  const { id } = useParams();\r\n  \r\n  useEffect(() => {\r\n    getLocations();\r\n  }, []);\r\n\r\n  const getLocations = () =>{\r\n    LocationService.Get(id)\r\n    .then((response) => {\r\n      setData(response.data);\r\n      console.log(data);\r\n    })\r\n    .catch((err) => {});\r\n  }\r\n\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const [validLocationBasicForm, setValidLocationBasicForm] = useState(false);\r\n  const [validAddressForm, setValidAddressForm] = useState(false);\r\n  const [validOpeningHoursForm, setValidOpeningHoursForm] = useState(true);\r\n\r\n  useEffect(() => {}, [data]);\r\n\r\n  const handleBasicLocationFormDataUpdated = (formData) => {\r\n    let newData = { ...data };\r\n    const address = formData.address;\r\n    const opening_hours = formData.opening_hours;\r\n\r\n    newData = formData;\r\n    newData.address = address;\r\n    newData.opening_hours = opening_hours;\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  const handleBasicLocationFormValid = (valid) => {\r\n    setValidLocationBasicForm(valid);\r\n  };\r\n\r\n  const handleAddressFormValid = (valid) => {\r\n    setValidAddressForm(valid);\r\n  };\r\n\r\n  const handleAddressFormDataUpdated = (formData) => {\r\n    const newData = { ...data };\r\n    newData.address = formData;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleOpeningHoursFormValid = (valid) => {\r\n    validOpeningHoursForm(valid);\r\n  };\r\n\r\n  const handleOpeningHoursFormUpdated = (formData) => {\r\n    const newData = { ...data };\r\n    newData.opening_hours = formData;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // console.log(validLocationBasicForm);\r\n    // console.log(validAddressForm);\r\n    // console.log(validOpeningHoursForm);\r\n\r\n    if (validLocationBasicForm && validAddressForm && validOpeningHoursForm) {\r\n      LocationService.Create(data)\r\n        .then((response) => {\r\n          props.history.push(\"/locations\");\r\n        })\r\n        .catch((err) => {})\r\n        .finally(() => {});\r\n    } else {\r\n      console.log(\"Forms are not valid\");\r\n      setErrors({ ...errors, [\"forms\"]: \"Please check all fields\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n <CRow >\r\n    <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12} className=\"p-0\">\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <ErrorMessage message={errors.forms} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CForm noValidate>\r\n        <CRow>\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Details</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <LocationBasicForm\r\n                  //item={locationBasicFormData}\r\n                  onItemValid={handleBasicLocationFormValid}\r\n                  onItemUpdated={handleBasicLocationFormDataUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Opening Hours</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <OpeningHoursForm\r\n                  item={data.opening_hours}\r\n                  onValidForm={handleOpeningHoursFormValid}\r\n                  onItemUpdated={handleOpeningHoursFormUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow>\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Address</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <AddressForm\r\n                  onItemValid={handleAddressFormValid}\r\n                  onItemUpdated={handleAddressFormDataUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow>\r\n          <CCol xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            <CButton block color=\"primary\" onClick={handleSubmit}>\r\n              Create\r\n            </CButton>\r\n          </CCol>\r\n          <CCol xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            <CButton block color=\"primary\">\r\n              Back\r\n            </CButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CForm>\r\n </CCol>\r\n        </CRow>\r\n  );\r\n};\r\n\r\nexport default LocationEdit;","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\localStorageService.js",["405"],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\locationService.js",["406"],"import { HTTPService } from \"./common\";\r\n\r\nconst apiEndpoint = process.env.REACT_APP_MERCHANT_API_URL + \"/locations\";\r\n\r\nasync function List() {\r\n  //HTTPService.addBearerAuthorization();\r\n  //HTTPService.addHeader('Access-Control-Allow-Origin', 'https://localhost:3000');\r\n  return await HTTPService.get(apiEndpoint);\r\n}\r\n\r\nasync function Get(id) {\r\n  //HTTPService.addBearerAuthorization();\r\n  return await HTTPService.get(apiEndpoint + \"/\" + encodeURIComponent(id));\r\n}\r\n\r\nasync function Create(data) {\r\n  //HTTPService.addBearerAuthorization();\r\n  console.log(data);\r\n  return await HTTPService.post(apiEndpoint, data);\r\n}\r\n\r\nasync function Edit(data) {\r\n  //HTTPService.addBearerAuthorization();\r\n  return await HTTPService.put(apiEndpoint + \"/\" + data.id, data);\r\n}\r\n\r\nasync function Delete(id) {\r\n  //HTTPService.addBearerAuthorization();\r\n  return await HTTPService.delete(encodeURI(apiEndpoint + \"/\" + id));\r\n}\r\n\r\nexport default {\r\n  List,\r\n  Get,\r\n  Create,\r\n  Edit,\r\n  Delete,  \r\n};\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\location\\locationBasicForm\\locationBasicForm.jsx",["407"],"import React, { useEffect, useState } from \"react\";\r\nimport { CRow, CCol, CInput, CTextarea, CFormGroup } from \"@coreui/react\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { ErrorMessage } from \"../../commons\";\r\nimport { Schemas } from \"../../../validations\";\r\nimport { UseValidateFormData } from \"../../../hooks\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction LocationBasicForm({ item, onItemUpdated, onItemValid }) {\r\n  const initialValues = {\r\n    name: \"\",\r\n    description: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n  };\r\n\r\n  // let schema = yup.object().shape({\r\n  //   name: yup.string().required().label(\"Name\"),\r\n  //   description: yup.string().optional(),\r\n  //   email: yup.string().email().optional(),\r\n  //   phone_number: yup.string().optional(),\r\n  //   latitude: yup.string().optional(),\r\n  //   longitude: yup.string().optional(),\r\n  // });\r\n\r\n  const [data, setData] = useState(item ? item : initialValues);\r\n  const [formErrors, setFormErrors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    onItemUpdated(data);\r\n  }, [data, onItemUpdated]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n\r\n    const { isValid, err } = UseValidateFormData(\r\n      Schemas.locationBasicFormSchema,\r\n      data\r\n    );\r\n\r\n    if (isValid) {\r\n      setFormErrors({});\r\n      onItemValid(true);\r\n    } else {\r\n      if (err && err.inner && err.inner.length > 0) {\r\n        const errors = { ...formErrors };\r\n        err.inner.map((val) => {\r\n          errors[val.path] = val.message;\r\n          return errors[val.path];\r\n        });\r\n        setFormErrors(errors);\r\n      }\r\n      onItemValid(false);\r\n    }\r\n\r\n    // Schemas.locationBasicFormSchema\r\n    //   .validate(data, { abortEarly: false })\r\n    //   .then((result) => {\r\n    //     setFormErrors({});\r\n    //     onItemValid(true);\r\n    //   })\r\n    //   .catch(function (err) {\r\n    //     if (err && err.inner && err.inner.length > 0) {\r\n    //       const errors = { ...formErrors };\r\n    //       err.inner.map((val) => {\r\n    //         errors[val.path] = val.message;\r\n    //         return errors[val.path];\r\n    //       });\r\n    //       setFormErrors(errors);\r\n    //     }\r\n    //     onItemValid(false);\r\n    //   })\r\n    //   .finally(() => {});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={data.name}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Name *\"\r\n              required\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.name} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={data.email}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Email\"\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.email} />\r\n        </CCol>\r\n\r\n        <CCol xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"phone_number\"\r\n              name=\"phone_number\"\r\n              value={data.phone_number}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Phone number\"\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.phone_number} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"latitude\"\r\n              name=\"latitude\"\r\n              value={data.latitude}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Latitude\"\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.latitude} />\r\n        </CCol>\r\n        <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"longitude\"\r\n              name=\"longitude\"\r\n              value={data.longitude}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Longitude\"\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.longitude} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <CFormGroup>\r\n            <CTextarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              value={data.description}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Description\"\r\n              plaintext={true}\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.description} />\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationBasicForm;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\location\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\shared\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\shared\\addressForm\\addressForm.jsx",["408","409"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CRow,\r\n  CCol,  \r\n  CInput,  \r\n  CFormGroup,  \r\n} from \"@coreui/react\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { ErrorMessage } from \"../../commons\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction AddressForm({ item, onItemUpdated, onItemValid }) {\r\n  const initialValues = {\r\n    line1: \"\",\r\n    line2: \"\",\r\n    zipcode: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n  };\r\n\r\n  let schema = yup.object().shape({\r\n    line1: yup.string().required().label(\"Line 1\"),\r\n    line2: yup.string().optional().label(\"Line 2\"),\r\n    zipcode: yup.string().required().label(\"Zipcode\"),\r\n    city: yup.string().required().label(\"City\"),\r\n    state: yup.string().required().label(\"State\"),\r\n    //country: yup.string().required().label(\"Country\"),\r\n  });\r\n\r\n  const [data, setData] = useState(item ? item : initialValues);\r\n\r\n  //const [validate, setValidate] = useState(checkForm);\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    onItemUpdated(data);\r\n  }, [data])\r\n\r\n  const handleInputChange = (e) => {\r\n    const newData = { ...data };\r\n    newData[e.target.name] = e.target.value;\r\n    setData(newData);\r\n\r\n    schema\r\n      .validate(data, { abortEarly: false })\r\n      .then((result) => {\r\n        setFormErrors({});\r\n        onItemValid(true);\r\n      })\r\n      .catch(function (err) {\r\n        if (err && err.inner && err.inner.length > 0) {\r\n          const errors = { ...formErrors };\r\n          err.inner.map((val) => {\r\n            errors[val.path] = val.message;\r\n          });\r\n          setFormErrors(errors);\r\n        }\r\n\r\n        onItemValid(false);\r\n      })\r\n      .finally(() => {        \r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"line1\"\r\n              name=\"line1\"\r\n              value={data.line1}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Line 1 *\"\r\n              required\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.line1} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"line2\"\r\n              name=\"line2\"\r\n              value={data.line2}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Line 2\"\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.line2} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"zipcode\"\r\n              name=\"zipcode\"\r\n              value={data.zipcode}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Zipcode *\"\r\n              required\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.zipcode} />\r\n        </CCol>\r\n\r\n        <CCol xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"city\"\r\n              name=\"city\"\r\n              value={data.city}\r\n              onChange={handleInputChange}\r\n              placeholder=\"City *\"\r\n              required\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.city} />\r\n        </CCol>\r\n\r\n        <CCol xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"state\"\r\n              name=\"state\"\r\n              value={data.state}\r\n              onChange={handleInputChange}\r\n              placeholder=\"State *\"\r\n              required\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.state} />\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddressForm;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\commons\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\commons\\errorMessage.jsx",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\location\\openingHoursForm\\openingHoursForm.jsx",["410","411","412","413","414"],"import React, { useEffect, useState } from \"react\";\r\nimport { CRow, CCol } from \"@coreui/react\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useInputsChanged } from \"../../../hooks\";\r\n\r\nimport HourSwitcher from \"./hourSwitcher\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction OpeningHoursForm({ item, onItemUpdated, onItemValid }) {\r\n  const initialValues = {\r\n    sunday: {\r\n      weekday: 1,\r\n      weekday_name: \"Sunday\",\r\n      hours: [],\r\n    },\r\n    monday: {\r\n      weekday: 2,\r\n      weekday_name: \"Monday\",\r\n      hours: [],\r\n    },\r\n    tuesday: {\r\n      weekday: 3,\r\n      weekday_name: \"Tuesday\",\r\n      hours: [],\r\n    },\r\n    wednesday: {\r\n      weekday: 4,\r\n      weekday_name: \"Wednesday\",\r\n      hours: [],\r\n    },\r\n    thursday: {\r\n      weekday: 5,\r\n      weekday_name: \"Thursday\",\r\n      hours: [],\r\n    },\r\n    friday: {\r\n      weekday: 6,\r\n      weekday_name: \"Friday\",\r\n      hours: [],\r\n    },\r\n    saturday: {\r\n      weekday: 7,\r\n      weekday_name: \"Saturday\",\r\n      hours: [],\r\n    },\r\n  };\r\n\r\n  let schema = yup.object().shape({});\r\n\r\n  const [data, setData] = useState(item ? item : initialValues);\r\n  const [formErrors, setFormErrors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    onItemUpdated(data);\r\n  }, [data]);\r\n\r\n  const handleSwitchChange = (e) => {\r\n    const name = e.name.toLowerCase();\r\n    const newData = data[name];\r\n\r\n    if (e.value === \"false\") {\r\n      newData.hours.push({\r\n        opensAt: \"10:00 AM\",\r\n        closesAt: \"05:00 PM\",\r\n      });\r\n    } else {\r\n      newData.hours = [];\r\n    }\r\n\r\n    setData({ ...data, [name]: newData });\r\n    onItemUpdated(data);\r\n  };\r\n\r\n  const handleTimeChange = (e) => {\r\n    const name = e.name.toLowerCase();\r\n    const weekday = e.getAttribute(\"data-weekday\");\r\n\r\n    const newData = data[weekday.toLowerCase()];\r\n    if (name === \"opensat\") {\r\n      newData.hours[0].opensAt = e.value;\r\n    } else {\r\n      newData.hours[0].closesAt = e.value;\r\n    }\r\n\r\n    setData({ ...data, [weekday.toLowerCase()]: newData });\r\n  };\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n        <HourSwitcher\r\n          item={data[\"sunday\"]}\r\n          onChange={handleSwitchChange}\r\n          onTimeChange={handleTimeChange}\r\n        />\r\n        <HourSwitcher\r\n          item={data[\"monday\"]}\r\n          onChange={handleSwitchChange}\r\n          onTimeChange={handleTimeChange}\r\n        />\r\n        <HourSwitcher\r\n          item={data[\"tuesday\"]}\r\n          onChange={handleSwitchChange}\r\n          onTimeChange={handleTimeChange}\r\n        />\r\n        <HourSwitcher\r\n          item={data[\"wednesday\"]}\r\n          onChange={handleSwitchChange}\r\n          onTimeChange={handleTimeChange}\r\n        />\r\n        <HourSwitcher\r\n          item={data[\"thursday\"]}\r\n          onChange={handleSwitchChange}\r\n          onTimeChange={handleTimeChange}\r\n        />\r\n        <HourSwitcher\r\n          item={data[\"friday\"]}\r\n          onChange={handleSwitchChange}\r\n          onTimeChange={handleTimeChange}\r\n        />\r\n        <HourSwitcher\r\n          item={data[\"saturday\"]}\r\n          onChange={handleSwitchChange}\r\n          onTimeChange={handleTimeChange}\r\n        />\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n}\r\n\r\nexport default OpeningHoursForm;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\hooks\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\hooks\\useInputsChanged.jsx",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\location\\openingHoursForm\\hourSwitcher.jsx",["415"],"import React, { useState } from \"react\";\r\nimport { CRow, CCol, CSelect, CSwitch, CLabel } from \"@coreui/react\";\r\n\r\nimport { time as timeHelper } from \"../../../helpers\";\r\nimport \"./style.css\";\r\n\r\nfunction HourSwitcher({ item, onChange, onTimeChange }) {\r\n  const [data, setData] = useState(item);\r\n\r\n  const handleSwitchChange = (e) => {\r\n    onChange(e.target);\r\n  };\r\n\r\n  const handleTimeChange = (e) => {\r\n    onTimeChange(e.target);\r\n  };\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n        <CRow>\r\n          <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n            <CRow>\r\n              <CCol xs={12} sm={12} md={2} lg={2} xl={1} xxl={1} className=\"\">\r\n                <CSwitch\r\n                  id={data.weekday_name}\r\n                  name={data.weekday_name}\r\n                  value={data.hours && data.hours.length > 0 ? true : false}\r\n                  onChange={handleSwitchChange}\r\n                  placeholder={data.weekday_name}\r\n                  variant=\"3d\"\r\n                  labelOn=\"On\"\r\n                  labelOff=\"Off\"\r\n                  shape=\"square\"\r\n                  size=\"lg\"\r\n                />\r\n              </CCol>\r\n              <CCol xs={12} sm={12} md={1} lg={2} xl={2} xxl={1} className=\"\">\r\n                <CLabel>{data.weekday_name}</CLabel>\r\n              </CCol>\r\n              <CCol xs={12} sm={12} md={3} lg={8} xl={9} xxl={10} className=\"\">\r\n                {data.hours && data.hours.length > 0 && (\r\n                  <CRow>\r\n                    <CCol>\r\n                      <CSelect\r\n                        custom\r\n                        data-weekday={data.weekday_name}\r\n                        name=\"opensAt\"\r\n                        id=\"opensAt\"\r\n                        value={data.hours[0].opensAt}\r\n                        onChange={handleTimeChange}\r\n                      >\r\n                        {timeHelper.listTimes(15).map((i) =>\r\n                          i === data.hours[0].opensAt ? (\r\n                            <option key={i} value={i} selected>\r\n                              {i}\r\n                            </option>\r\n                          ) : (\r\n                            <option key={i} value={i}>\r\n                              {i}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                      </CSelect>\r\n                    </CCol>\r\n                    <CCol>\r\n                      <CSelect\r\n                        custom\r\n                        data-weekday={data.weekday_name}\r\n                        name=\"closesAt\"\r\n                        id=\"closesAt\"\r\n                        value={item.hours[0].closesAt}\r\n                        onChange={handleTimeChange}\r\n                      >\r\n                        {timeHelper.listTimes(15).map((i) =>\r\n                          i === item.hours[0].closesAt ? (\r\n                            <option key={i} value={i} selected>\r\n                              {i}\r\n                            </option>\r\n                          ) : (\r\n                            <option key={i} value={i}>\r\n                              {i}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                      </CSelect>\r\n                    </CCol>\r\n                  </CRow>\r\n                )}\r\n              </CCol>\r\n            </CRow>\r\n          </CCol>\r\n        </CRow>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n}\r\n\r\nexport default HourSwitcher;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\time.jsx",["416"],"function listTimes(interval = 15) {\r\n    \r\n  var times = []; // time array\r\n  var tt = 0; // start time\r\n  var ap = [\"AM\", \"PM\"]; // AM-PM\r\n\r\n  for (var i = 0; tt < 24 * 60; i++) {\r\n    var hh = Math.floor(tt / 60); // getting hours of day in 0-24 format\r\n    var mm = tt % 60; // getting minutes of the hour in 0-55 format\r\n    times[i] =\r\n      (\"0\" + (hh % 12)).slice(-2) +\r\n      \":\" +\r\n      (\"0\" + mm).slice(-2) + \" \" +\r\n      ap[Math.floor(hh / 12)]; // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n    tt = tt + interval;\r\n  }\r\n  \r\n  return times;\r\n}\r\n\r\nexport default {\r\n  listTimes,\r\n};","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\product\\productBasicForm.jsx",["417","418","419"],"import React, { useEffect, useState } from \"react\";\r\nimport { CRow, CCol, CInput, CSelect, CFormGroup, CTextarea } from \"@coreui/react\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { ErrorMessage } from \"../commons\";\r\nimport { ProductCategoryService } from \"../../services\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction ProductBasicForm({ item, OnSubmit }) {\r\n  const intialValues = {\r\n    name: \"\",\r\n    description: \"\",\r\n    category_id: undefined,\r\n    subcategory_id: undefined,\r\n    cost: undefined,\r\n    price: undefined,\r\n  };\r\n\r\n  const [data, setData] = useState(item != null ? item : intialValues);\r\n\r\n  //const [formValues, setFormValues] = useState(intialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  // const [formValid, setFormValid] = useState(false);\r\n  // const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [subcategories, setSubCategories] = useState([]);\r\n  const [inputsUpdated, setInputsUpdated] = useState(false);\r\n\r\n  let schema = yup.object().shape({\r\n    name: yup.string().required().label(\"Name\"),\r\n    description: yup.string().optional(),\r\n    category_id: yup.string().optional(),\r\n    subcategory_id: yup.string().optional(),\r\n    cost: yup.number().optional(),\r\n    price: yup.number().optional(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    getParentCategories();\r\n  }, []);\r\n\r\n  const getParentCategories = () => {\r\n    ProductCategoryService.ListParent().then((response) => {\r\n      if (response.data && response.data.length > 0) {\r\n        setCategories([{ id: \"\", name: \"-- Select --\" }, ...response.data]);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.category) {\r\n      ProductCategoryService.GetsByParentId(data.category).then((response) => {\r\n        if (response.data && response.data.length > 0) {\r\n          setSubCategories([\r\n            { id: \"\", name: \"-- Select --\" },\r\n            ...response.data,\r\n          ]);\r\n        } else {\r\n          setSubCategories([]);\r\n        }\r\n      });\r\n    }\r\n  }, [inputsUpdated]);\r\n\r\n  // const submitForm = () => {\r\n  //   OnSubmit(inputs);\r\n  // };\r\n\r\n  // const inputsUpdatedCallback = (inputs) => {\r\n  //   setInputsUpdated(!inputsUpdated);\r\n  // };\r\n\r\n  // const handleChange = (e) => {\r\n  //   const { name, value } = e.target;\r\n  //   setFormValues({ ...formValues, [name]: value });\r\n  // };\r\n\r\n  // const submit = (event) => {\r\n  //   const { name, value } = event.target;\r\n  //   setFormValues({ ...formValues, [name]: value });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   if (Object.keys(formErrors).length === 0 && isSubmitting) {\r\n  //     submitForm();\r\n  //   }\r\n  // }, [formErrors]);\r\n\r\n  // const { inputs, handleInputChange, handleSubmit } = useSubmitForm(\r\n  //   intialValues,\r\n  //   inputsUpdatedCallback,\r\n  //   submit\r\n  // );\r\n\r\n  const handleInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n\r\n    schema\r\n      .validate(data, { abortEarly: false })\r\n      .then((result) => {\r\n        setFormErrors({});\r\n        //onItemValid(true);\r\n      })\r\n      .catch(function (err) {\r\n        if (err && err.inner && err.inner.length > 0) {\r\n          const errors = { ...formErrors };\r\n          err.inner.map((val) => {\r\n            errors[val.path] = val.message;\r\n          });\r\n          setFormErrors(errors);\r\n        }\r\n        //onItemValid(false);\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={data.name}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Name\"\r\n              required\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.name} />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n          <CFormGroup>\r\n            <CSelect\r\n              custom\r\n              name=\"category\"\r\n              id=\"category\"\r\n              value={data.category}\r\n              onChange={handleInputChange}\r\n              disabled={categories.length <= 0}\r\n            >\r\n              {categories.map((value, index) => {\r\n                return (\r\n                  <option key={value.id} value={value.id}>\r\n                    {value.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CSelect>\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.category} />\r\n        </CCol>\r\n        <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n          <CFormGroup>\r\n            <CSelect\r\n              custom\r\n              name=\"subcategory\"\r\n              id=\"subcategory\"\r\n              value={data.subcategory}\r\n              onChange={handleInputChange}\r\n              disabled={subcategories.length <= 0}\r\n            >\r\n              {subcategories.map((value, index) => {\r\n                return (\r\n                  <option key={value.id} value={value.id}>\r\n                    {value.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CSelect>\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.subcategory} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"cost\"\r\n              name=\"cost\"\r\n              value={data.cost}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Cost\"\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.cost} />\r\n        </CCol>\r\n        <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"price\"\r\n              name=\"price\"\r\n              value={data.price}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Price\"\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.price} />\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <CFormGroup>\r\n            <CTextarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              value={data.description}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Description\"\r\n              plaintext={true}\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.description} />\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductBasicForm;","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\menu\\MenuListing.jsx",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\menu\\MenuCreate.jsx",["420","421","422","423"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n} from \"@coreui/react\";\r\n\r\nimport { LocationService } from \"../../services\";\r\n\r\nimport { AddressForm } from \"../../components/shared\";\r\nimport { LocationBasicForm, OpeningHoursForm } from \"../../components/location\";\r\nimport { ErrorMessage } from \"../../components/commons\";\r\n\r\nconst MenuCreate = (props) => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n    address: {},\r\n    opening_hours: {\r\n      sunday: {\r\n        weekday: 1,\r\n        weekday_name: \"Sunday\",\r\n        hours: [],\r\n      },\r\n      monday: {\r\n        weekday: 2,\r\n        weekday_name: \"Monday\",\r\n        hours: [],\r\n      },\r\n      tuesday: {\r\n        weekday: 3,\r\n        weekday_name: \"Tuesday\",\r\n        hours: [],\r\n      },\r\n      wednesday: {\r\n        weekday: 4,\r\n        weekday_name: \"Wednesday\",\r\n        hours: [],\r\n      },\r\n      thursday: {\r\n        weekday: 5,\r\n        weekday_name: \"Thursday\",\r\n        hours: [],\r\n      },\r\n      friday: {\r\n        weekday: 6,\r\n        weekday_name: \"Friday\",\r\n        hours: [],\r\n      },\r\n      saturday: {\r\n        weekday: 7,\r\n        weekday_name: \"Saturday\",\r\n        hours: [],\r\n      },\r\n    },\r\n  });\r\n\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const [validLocationBasicForm, setValidLocationBasicForm] = useState(false);\r\n  const [validAddressForm, setValidAddressForm] = useState(false);\r\n  const [validOpeningHoursForm, setValidOpeningHoursForm] = useState(true);\r\n\r\n  useEffect(() => {}, [data]);\r\n\r\n  const handleBasicLocationFormDataUpdated = (formData) => {\r\n    let newData = { ...data };\r\n    const address = formData.address;\r\n    const opening_hours = formData.opening_hours;\r\n\r\n    newData = formData;\r\n    newData.address = address;\r\n    newData.opening_hours = opening_hours;\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  const handleBasicLocationFormValid = (valid) => {\r\n    setValidLocationBasicForm(valid);\r\n  };\r\n\r\n  const handleAddressFormValid = (valid) => {\r\n    setValidAddressForm(valid);\r\n  };\r\n\r\n  const handleAddressFormDataUpdated = (formData) => {\r\n    const newData = { ...data };\r\n    newData.address = formData;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleOpeningHoursFormValid = (valid) => {\r\n    validOpeningHoursForm(valid);\r\n  };\r\n\r\n  const handleOpeningHoursFormUpdated = (formData) => {\r\n    const newData = { ...data };\r\n    newData.opening_hours = formData;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // console.log(validLocationBasicForm);\r\n    // console.log(validAddressForm);\r\n    // console.log(validOpeningHoursForm);\r\n\r\n    if (validLocationBasicForm && validAddressForm && validOpeningHoursForm) {\r\n      LocationService.Create(data)\r\n        .then((response) => {\r\n          props.history.push(\"/locations\");\r\n        })\r\n        .catch((err) => {})\r\n        .finally(() => {});\r\n    } else {\r\n      console.log(\"Forms are not valid\");\r\n      setErrors({ ...errors, [\"forms\"]: \"Please check all fields\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <ErrorMessage message={errors.forms} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CForm noValidate>\r\n        <CRow>\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Details</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <LocationBasicForm\r\n                  //item={locationBasicFormData}\r\n                  onItemValid={handleBasicLocationFormValid}\r\n                  onItemUpdated={handleBasicLocationFormDataUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Opening Hours</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <OpeningHoursForm\r\n                  item={data.opening_hours}\r\n                  onValidForm={handleOpeningHoursFormValid}\r\n                  onItemUpdated={handleOpeningHoursFormUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow>\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Address</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <AddressForm\r\n                  onItemValid={handleAddressFormValid}\r\n                  onItemUpdated={handleAddressFormDataUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow>\r\n          <CCol xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            <CButton block color=\"primary\" onClick={handleSubmit}>\r\n              Create\r\n            </CButton>\r\n          </CCol>\r\n          <CCol xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            <CButton block color=\"primary\">\r\n              Back\r\n            </CButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuCreate;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\menu\\MenuEdit.jsx",["424","425","426","427","428"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation, useParams, } from \"react-router-dom\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CButton,\r\n} from \"@coreui/react\";\r\n\r\nimport { LocationService } from \"../../services\";\r\n\r\nimport { AddressForm } from \"../../components/shared\";\r\nimport { LocationBasicForm, OpeningHoursForm } from \"../../components/location\";\r\nimport { ErrorMessage } from \"../../components/commons\";\r\n\r\nconst MenuEdit = (props) => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n    address: {},\r\n    opening_hours: {\r\n      sunday: {\r\n        weekday: 1,\r\n        weekday_name: \"Sunday\",\r\n        hours: [],\r\n      },\r\n      monday: {\r\n        weekday: 2,\r\n        weekday_name: \"Monday\",\r\n        hours: [],\r\n      },\r\n      tuesday: {\r\n        weekday: 3,\r\n        weekday_name: \"Tuesday\",\r\n        hours: [],\r\n      },\r\n      wednesday: {\r\n        weekday: 4,\r\n        weekday_name: \"Wednesday\",\r\n        hours: [],\r\n      },\r\n      thursday: {\r\n        weekday: 5,\r\n        weekday_name: \"Thursday\",\r\n        hours: [],\r\n      },\r\n      friday: {\r\n        weekday: 6,\r\n        weekday_name: \"Friday\",\r\n        hours: [],\r\n      },\r\n      saturday: {\r\n        weekday: 7,\r\n        weekday_name: \"Saturday\",\r\n        hours: [],\r\n      },\r\n    },\r\n  });\r\n  \r\n  const { id } = useParams();\r\n  \r\n  useEffect(() => {\r\n    getLocations();\r\n  }, []);\r\n\r\n  const getLocations = () =>{\r\n    LocationService.Get(id)\r\n    .then((response) => {\r\n      setData(response.data);\r\n      console.log(data);\r\n    })\r\n    .catch((err) => {});\r\n  }\r\n\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const [validLocationBasicForm, setValidLocationBasicForm] = useState(false);\r\n  const [validAddressForm, setValidAddressForm] = useState(false);\r\n  const [validOpeningHoursForm, setValidOpeningHoursForm] = useState(true);\r\n\r\n  useEffect(() => {}, [data]);\r\n\r\n  const handleBasicLocationFormDataUpdated = (formData) => {\r\n    let newData = { ...data };\r\n    const address = formData.address;\r\n    const opening_hours = formData.opening_hours;\r\n\r\n    newData = formData;\r\n    newData.address = address;\r\n    newData.opening_hours = opening_hours;\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  const handleBasicLocationFormValid = (valid) => {\r\n    setValidLocationBasicForm(valid);\r\n  };\r\n\r\n  const handleAddressFormValid = (valid) => {\r\n    setValidAddressForm(valid);\r\n  };\r\n\r\n  const handleAddressFormDataUpdated = (formData) => {\r\n    const newData = { ...data };\r\n    newData.address = formData;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleOpeningHoursFormValid = (valid) => {\r\n    validOpeningHoursForm(valid);\r\n  };\r\n\r\n  const handleOpeningHoursFormUpdated = (formData) => {\r\n    const newData = { ...data };\r\n    newData.opening_hours = formData;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // console.log(validLocationBasicForm);\r\n    // console.log(validAddressForm);\r\n    // console.log(validOpeningHoursForm);\r\n\r\n    if (validLocationBasicForm && validAddressForm && validOpeningHoursForm) {\r\n      LocationService.Create(data)\r\n        .then((response) => {\r\n          props.history.push(\"/locations\");\r\n        })\r\n        .catch((err) => {})\r\n        .finally(() => {});\r\n    } else {\r\n      console.log(\"Forms are not valid\");\r\n      setErrors({ ...errors, [\"forms\"]: \"Please check all fields\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <ErrorMessage message={errors.forms} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CForm noValidate>\r\n        <CRow>\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Details</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <LocationBasicForm\r\n                  //item={locationBasicFormData}\r\n                  onItemValid={handleBasicLocationFormValid}\r\n                  onItemUpdated={handleBasicLocationFormDataUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Opening Hours</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <OpeningHoursForm\r\n                  item={data.opening_hours}\r\n                  onValidForm={handleOpeningHoursFormValid}\r\n                  onItemUpdated={handleOpeningHoursFormUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow>\r\n          <CCol xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <div className=\"font-weight-bold\">Address</div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <AddressForm\r\n                  onItemValid={handleAddressFormValid}\r\n                  onItemUpdated={handleAddressFormDataUpdated}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <CRow>\r\n          <CCol xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            <CButton block color=\"primary\" onClick={handleSubmit}>\r\n              Create\r\n            </CButton>\r\n          </CCol>\r\n          <CCol xs=\"6\" sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n            <CButton block color=\"primary\">\r\n              Back\r\n            </CButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuEdit;\r\n\r\n\r\n\r\n\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\services\\menuService.js",["429"],"import { HTTPService } from \"./common\";\r\n\r\nconst apiEndpoint = process.env.REACT_APP_MERCHANT_API_URL + \"/menus\";\r\n\r\nasync function List() {  \r\n  return await HTTPService.get(apiEndpoint);\r\n}\r\n\r\nasync function Get(id) {  \r\n  return await HTTPService.get(apiEndpoint + \"/\" + encodeURIComponent(id));\r\n}\r\n\r\nasync function Create(data) {  \r\n  return await HTTPService.post(apiEndpoint, data);\r\n}\r\n\r\nasync function Edit(data) {  \r\n  return await HTTPService.put(apiEndpoint + \"/\" + data.id, data);\r\n}\r\n\r\nasync function Delete(id) {  \r\n  return await HTTPService.delete(encodeURI(apiEndpoint + \"/\" + id));\r\n}\r\n\r\nexport default {\r\n  List,\r\n  Get,\r\n  Create,\r\n  Edit,\r\n  Delete,  \r\n};\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\views\\account\\profile\\Profile.jsx",["430","431","432","433","434","435","436","437","438","439","440"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nimport useSubmitForm from \"../../../hooks/useSubmitForm\";\r\nimport { AuthService, LocalStorageService } from \"../../../services\";\r\nimport { email as emailHelpers } from \"../../../helpers\";\r\n\r\nconst Profile = () => {\r\n  const intialValues = {\r\n    username: \"rafamuniz_localrest@gmail.com\",\r\n    password: \"Password123$\",\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(intialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    AuthService.Login(inputs)\r\n      .then((response) => {\r\n        LocalStorageService.saveToken(response.data.access_token);\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  const handleForgotPassword = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { data } = this.state;\r\n    const { history } = this.props;\r\n\r\n    if (data.username !== \"\" && emailHelpers.validate(data.username)) {\r\n      history.push(\"/account/forgotpassword/?email=\" + data.username);\r\n    } else {\r\n      history.push(\"/account/forgotpassword\");\r\n    }\r\n  };\r\n\r\n  const inputsUpdatedCallback = (inputs) => {\r\n    //setInputsUpdated(!inputsUpdated);\r\n  };\r\n\r\n  const submit = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const { inputs, handleInputChange, handleSubmit } = useSubmitForm(\r\n    intialValues,\r\n    inputsUpdatedCallback,\r\n    handleLogin\r\n  );\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"8\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm>\r\n                    <h1>Login</h1>\r\n                    <p className=\"text-muted\">Sign In to your account</p>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-user\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        autoComplete=\"username\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        value={inputs.username}\r\n                        onChange={handleInputChange}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-lock-locked\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        autoComplete=\"current-password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={inputs.password}\r\n                        onChange={handleInputChange}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                      <CCol xs=\"6\">\r\n                        <CButton\r\n                          color=\"primary\"\r\n                          className=\"px-4\"\r\n                          onClick={handleSubmit}\r\n                          disabled={formValid}\r\n                        >\r\n                          Login\r\n                        </CButton>\r\n                      </CCol>\r\n                      <CCol xs=\"6\" className=\"text-right\">\r\n                        <CButton color=\"link\" className=\"px-0\">\r\n                          Forgot password?\r\n                        </CButton>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n              <CCard\r\n                className=\"text-white bg-primary py-5 d-md-down-none\"\r\n                style={{ width: \"44%\" }}\r\n              >\r\n                <CCardBody className=\"text-center\">\r\n                  <div>\r\n                    <h2>Sign up</h2>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua.\r\n                    </p>\r\n                    <Link to=\"/register\">\r\n                      <CButton\r\n                        color=\"primary\"\r\n                        className=\"mt-3\"\r\n                        active\r\n                        tabIndex={-1}\r\n                      >\r\n                        Register Now!\r\n                      </CButton>\r\n                    </Link>\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\validations\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\hooks\\useValidateFormData.jsx",["441","442"],"import { useState } from \"react\";\r\n\r\nconst useValidateFormData = (schema, data) => {\r\n  // onValid = () => {},  // onInvalid = () => {}\r\n\r\n  const [isValid, setIsValid] = useState(false);\r\n  //const [errors, setErrors] = useState({});\r\n\r\n  schema\r\n    .validate(data, { abortEarly: false })\r\n    .then((result) => {\r\n      //setIsValid(true);\r\n      //onValid();\r\n    })\r\n    .catch((err) => {\r\n      //setIsValid(false);\r\n      //setErrors(errors);\r\n      //onInvalid(err);\r\n    })\r\n    .finally(() => {});\r\n\r\n  return {\r\n    isValid: true,\r\n    errors: {},\r\n  };\r\n};\r\n\r\nexport default useValidateFormData;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\productCategory\\index.js",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\productCategory\\productCategoryForm\\productCategoryForm.jsx",["443","444","445","446"],"import React, { useEffect, useState } from \"react\";\r\nimport { CRow, CCol, CInput, CSelect, CFormGroup } from \"@coreui/react\";\r\n\r\nimport { ErrorMessage } from \"../../commons\";\r\nimport { ProductCategoryService } from \"../../../services\";\r\nimport { UseValidateFormData } from \"../../../hooks\";\r\nimport { Schemas } from \"../../../validations\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction ProductCategoryForm({\r\n  item,\r\n  checkForm,\r\n  onItemUpdated = () => {},\r\n  onItemValid = () => {},\r\n  onItemInvalid = () => {},  \r\n}) {\r\n  const initialValues = {\r\n    name: \"\",\r\n    category: undefined,\r\n  };\r\n\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [data, setData] = useState(item || initialValues);\r\n  const [categories, setCategories] = useState([]);\r\n  const [validate, setValidate] = useState(checkForm);\r\n\r\n  useEffect(() => {\r\n    getProductCategoryParents();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"checkForm\");\r\n    if (validate === true) {\r\n      console.log(\"Not valid\");\r\n      validateForm();\r\n    }\r\n  }, [validate]);\r\n\r\n  useEffect(() => {\r\n    onItemUpdated(data);\r\n  }, [data, onItemUpdated]);\r\n\r\n  const getProductCategoryParents = () => {\r\n    ProductCategoryService.ListParent().then((response) => {\r\n      if (response.data) {\r\n        setCategories([{ id: \"\", name: \"-- Select --\" }, ...response.data]);\r\n      } else {\r\n        setCategories([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.category) {\r\n      getProductCategoryParents();\r\n    }\r\n  }, [categories]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n\r\n    validateForm();\r\n\r\n    // schema\r\n    //   .validate(data, { abortEarly: false })\r\n    //   .then((result) => {\r\n    //     setFormErrors({});\r\n    //     //onItemValid(true);\r\n    //   })\r\n    //   .catch(function (err) {\r\n    //     if (err && err.inner && err.inner.length > 0) {\r\n    //       const errors = { ...formErrors };\r\n    //       err.inner.map((val) => {\r\n    //         errors[val.path] = val.message;\r\n    //       });\r\n    //       setFormErrors(errors);\r\n    //     }\r\n    //     //onItemValid(false);\r\n    //   })\r\n    //   .finally(() => {});\r\n  };\r\n\r\n  const validateForm = () => {\r\n    console.log(\"validateForm\");\r\n    Schemas.productCategoryFormSchema\r\n      .validate(data, { abortEarly: false })\r\n      .then((result) => {\r\n        setFormErrors({});\r\n        onItemValid(true);\r\n      })\r\n      .catch((errors) => {\r\n        if (errors && errors.inner && errors.inner.length > 0) {\r\n          const err = { ...formErrors };\r\n          errors.inner.map((val) => {\r\n            err[val.path] = val.message;\r\n            return err[val.path];\r\n          });\r\n          console.log(errors);\r\n\r\n          setFormErrors(err);\r\n        }\r\n        onItemValid(false);\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <CFormGroup>\r\n            <CInput\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={data.name}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Name\"\r\n              required\r\n            />\r\n          </CFormGroup>\r\n          <ErrorMessage message={formErrors.name} />\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n          <CFormGroup>\r\n            <CSelect\r\n              custom\r\n              name=\"category\"\r\n              id=\"category\"\r\n              value={data.category}\r\n              onChange={handleInputChange}\r\n              disabled={categories.length <= 0}\r\n            >\r\n              {categories.map((value, index) => {\r\n                return (\r\n                  <option key={value.id} value={value.id}>\r\n                    {value.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CSelect>\r\n          </CFormGroup>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCategoryForm;\r\n","M:\\Projects\\Sole\\Merchant-WebApp\\src\\validations\\schemas.js",["447"],"import * as yup from \"yup\";\r\n\r\nconst locationBasicFormSchema = yup.object().shape({\r\n    name: yup.string().required().label(\"Name\"),\r\n    description: yup.string().optional(),\r\n    email: yup.string().email().optional(),\r\n    phone_number: yup.string().optional(),\r\n    latitude: yup.string().optional(),\r\n    longitude: yup.string().optional(),\r\n});\r\n\r\nconst productCategoryFormSchema = yup.object().shape({\r\n    name: yup.string().required().label(\"Name\"),\r\n    category: yup.string().optional(),\r\n});\r\n\r\nexport default {\r\n    locationBasicFormSchema,\r\n    productCategoryFormSchema,\r\n}","M:\\Projects\\Sole\\Merchant-WebApp\\src\\components\\commons\\protectedRoute.jsx",[],"M:\\Projects\\Sole\\Merchant-WebApp\\src\\helpers\\jwtHelpers.jsx",["448"],{"ruleId":"449","replacedBy":"450"},{"ruleId":"451","replacedBy":"452"},{"ruleId":"453","severity":1,"message":"454","line":4,"column":3,"nodeType":"455","messageId":"456","endLine":4,"endColumn":9},{"ruleId":"453","severity":1,"message":"457","line":10,"column":3,"nodeType":"455","messageId":"456","endLine":10,"endColumn":8},{"ruleId":"453","severity":1,"message":"458","line":3,"column":3,"nodeType":"455","messageId":"456","endLine":3,"endColumn":11},{"ruleId":"453","severity":1,"message":"459","line":4,"column":3,"nodeType":"455","messageId":"456","endLine":4,"endColumn":8},{"ruleId":"460","severity":1,"message":"461","line":4,"column":1,"nodeType":"462","endLine":513,"endColumn":2},{"ruleId":"453","severity":1,"message":"463","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":20},{"ruleId":"453","severity":1,"message":"464","line":2,"column":22,"nodeType":"455","messageId":"456","endLine":2,"endColumn":33},{"ruleId":"453","severity":1,"message":"454","line":4,"column":3,"nodeType":"455","messageId":"456","endLine":4,"endColumn":9},{"ruleId":"453","severity":1,"message":"465","line":9,"column":3,"nodeType":"455","messageId":"456","endLine":9,"endColumn":13},{"ruleId":"453","severity":1,"message":"466","line":11,"column":3,"nodeType":"455","messageId":"456","endLine":11,"endColumn":14},{"ruleId":"453","severity":1,"message":"467","line":17,"column":10,"nodeType":"455","messageId":"456","endLine":17,"endColumn":17},{"ruleId":"453","severity":1,"message":"468","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":25},{"ruleId":"453","severity":1,"message":"469","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"453","severity":1,"message":"463","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":20},{"ruleId":"453","severity":1,"message":"464","line":2,"column":22,"nodeType":"455","messageId":"456","endLine":2,"endColumn":33},{"ruleId":"453","severity":1,"message":"468","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":25},{"ruleId":"453","severity":1,"message":"469","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"453","severity":1,"message":"463","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":20},{"ruleId":"453","severity":1,"message":"464","line":2,"column":22,"nodeType":"455","messageId":"456","endLine":2,"endColumn":33},{"ruleId":"453","severity":1,"message":"464","line":2,"column":28,"nodeType":"455","messageId":"456","endLine":2,"endColumn":39},{"ruleId":"453","severity":1,"message":"454","line":4,"column":3,"nodeType":"455","messageId":"456","endLine":4,"endColumn":9},{"ruleId":"453","severity":1,"message":"466","line":11,"column":3,"nodeType":"455","messageId":"456","endLine":11,"endColumn":14},{"ruleId":"449","replacedBy":"470"},{"ruleId":"451","replacedBy":"471"},{"ruleId":"453","severity":1,"message":"468","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":25},{"ruleId":"460","severity":1,"message":"472","line":25,"column":1,"nodeType":"462","endLine":31,"endColumn":3},{"ruleId":"453","severity":1,"message":"473","line":4,"column":7,"nodeType":"455","messageId":"456","endLine":4,"endColumn":15},{"ruleId":"460","severity":1,"message":"472","line":34,"column":1,"nodeType":"462","endLine":42,"endColumn":3},{"ruleId":"460","severity":1,"message":"472","line":9,"column":1,"nodeType":"462","endLine":12,"endColumn":3},{"ruleId":"460","severity":1,"message":"472","line":56,"column":1,"nodeType":"462","endLine":70,"endColumn":3},{"ruleId":"453","severity":1,"message":"474","line":30,"column":10,"nodeType":"455","messageId":"456","endLine":30,"endColumn":20},{"ruleId":"453","severity":1,"message":"475","line":30,"column":22,"nodeType":"455","messageId":"456","endLine":30,"endColumn":35},{"ruleId":"453","severity":1,"message":"476","line":31,"column":21,"nodeType":"455","messageId":"456","endLine":31,"endColumn":33},{"ruleId":"453","severity":1,"message":"477","line":32,"column":10,"nodeType":"455","messageId":"456","endLine":32,"endColumn":22},{"ruleId":"453","severity":1,"message":"478","line":32,"column":24,"nodeType":"455","messageId":"456","endLine":32,"endColumn":39},{"ruleId":"453","severity":1,"message":"479","line":34,"column":10,"nodeType":"455","messageId":"456","endLine":34,"endColumn":18},{"ruleId":"453","severity":1,"message":"480","line":34,"column":20,"nodeType":"455","messageId":"456","endLine":34,"endColumn":31},{"ruleId":"453","severity":1,"message":"481","line":35,"column":10,"nodeType":"455","messageId":"456","endLine":35,"endColumn":18},{"ruleId":"453","severity":1,"message":"482","line":35,"column":20,"nodeType":"455","messageId":"456","endLine":35,"endColumn":31},{"ruleId":"453","severity":1,"message":"483","line":51,"column":9,"nodeType":"455","messageId":"456","endLine":51,"endColumn":29},{"ruleId":"453","severity":1,"message":"484","line":68,"column":9,"nodeType":"455","messageId":"456","endLine":68,"endColumn":15},{"ruleId":"460","severity":1,"message":"472","line":15,"column":1,"nodeType":"462","endLine":18,"endColumn":3},{"ruleId":"460","severity":1,"message":"472","line":7,"column":1,"nodeType":"462","endLine":9,"endColumn":2},{"ruleId":"460","severity":1,"message":"472","line":27,"column":1,"nodeType":"462","endLine":30,"endColumn":3},{"ruleId":"460","severity":1,"message":"472","line":19,"column":1,"nodeType":"462","endLine":23,"endColumn":3},{"ruleId":"453","severity":1,"message":"463","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":20},{"ruleId":"453","severity":1,"message":"464","line":2,"column":22,"nodeType":"455","messageId":"456","endLine":2,"endColumn":33},{"ruleId":"453","severity":1,"message":"485","line":71,"column":33,"nodeType":"455","messageId":"456","endLine":71,"endColumn":57},{"ruleId":"486","severity":1,"message":"487","line":127,"column":30,"nodeType":"488","messageId":"489","endLine":127,"endColumn":66,"fix":"490"},{"ruleId":"491","severity":1,"message":"492","line":133,"column":32,"nodeType":"493","endLine":133,"endColumn":45},{"ruleId":"453","severity":1,"message":"463","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":20},{"ruleId":"453","severity":1,"message":"464","line":2,"column":22,"nodeType":"455","messageId":"456","endLine":2,"endColumn":33},{"ruleId":"494","severity":1,"message":"495","line":71,"column":6,"nodeType":"496","endLine":71,"endColumn":8,"suggestions":"497"},{"ruleId":"453","severity":1,"message":"485","line":86,"column":33,"nodeType":"455","messageId":"456","endLine":86,"endColumn":57},{"ruleId":"486","severity":1,"message":"487","line":142,"column":30,"nodeType":"488","messageId":"489","endLine":142,"endColumn":66,"fix":"498"},{"ruleId":"460","severity":1,"message":"472","line":51,"column":1,"nodeType":"462","endLine":56,"endColumn":3},{"ruleId":"460","severity":1,"message":"472","line":32,"column":1,"nodeType":"462","endLine":38,"endColumn":3},{"ruleId":"453","severity":1,"message":"499","line":3,"column":13,"nodeType":"455","messageId":"456","endLine":3,"endColumn":16},{"ruleId":"494","severity":1,"message":"500","line":40,"column":6,"nodeType":"496","endLine":40,"endColumn":12,"suggestions":"501"},{"ruleId":"502","severity":1,"message":"503","line":56,"column":31,"nodeType":"504","messageId":"505","endLine":56,"endColumn":33},{"ruleId":"453","severity":1,"message":"506","line":5,"column":10,"nodeType":"455","messageId":"456","endLine":5,"endColumn":26},{"ruleId":"453","severity":1,"message":"507","line":50,"column":7,"nodeType":"455","messageId":"456","endLine":50,"endColumn":13},{"ruleId":"453","severity":1,"message":"474","line":53,"column":10,"nodeType":"455","messageId":"456","endLine":53,"endColumn":20},{"ruleId":"453","severity":1,"message":"475","line":53,"column":22,"nodeType":"455","messageId":"456","endLine":53,"endColumn":35},{"ruleId":"494","severity":1,"message":"500","line":57,"column":6,"nodeType":"496","endLine":57,"endColumn":12,"suggestions":"508"},{"ruleId":"453","severity":1,"message":"509","line":8,"column":16,"nodeType":"455","messageId":"456","endLine":8,"endColumn":23},{"ruleId":"460","severity":1,"message":"472","line":21,"column":1,"nodeType":"462","endLine":23,"endColumn":3},{"ruleId":"453","severity":1,"message":"510","line":29,"column":25,"nodeType":"455","messageId":"456","endLine":29,"endColumn":41},{"ruleId":"494","severity":1,"message":"511","line":65,"column":6,"nodeType":"496","endLine":65,"endColumn":21,"suggestions":"512"},{"ruleId":"502","severity":1,"message":"503","line":109,"column":31,"nodeType":"504","messageId":"505","endLine":109,"endColumn":33},{"ruleId":"453","severity":1,"message":"463","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":20},{"ruleId":"453","severity":1,"message":"464","line":2,"column":22,"nodeType":"455","messageId":"456","endLine":2,"endColumn":33},{"ruleId":"453","severity":1,"message":"485","line":71,"column":33,"nodeType":"455","messageId":"456","endLine":71,"endColumn":57},{"ruleId":"486","severity":1,"message":"487","line":127,"column":30,"nodeType":"488","messageId":"489","endLine":127,"endColumn":66,"fix":"513"},{"ruleId":"453","severity":1,"message":"463","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":20},{"ruleId":"453","severity":1,"message":"464","line":2,"column":22,"nodeType":"455","messageId":"456","endLine":2,"endColumn":33},{"ruleId":"494","severity":1,"message":"495","line":71,"column":6,"nodeType":"496","endLine":71,"endColumn":8,"suggestions":"514"},{"ruleId":"453","severity":1,"message":"485","line":86,"column":33,"nodeType":"455","messageId":"456","endLine":86,"endColumn":57},{"ruleId":"486","severity":1,"message":"487","line":142,"column":30,"nodeType":"488","messageId":"489","endLine":142,"endColumn":66,"fix":"515"},{"ruleId":"460","severity":1,"message":"472","line":25,"column":1,"nodeType":"462","endLine":31,"endColumn":3},{"ruleId":"453","severity":1,"message":"474","line":30,"column":10,"nodeType":"455","messageId":"456","endLine":30,"endColumn":20},{"ruleId":"453","severity":1,"message":"475","line":30,"column":22,"nodeType":"455","messageId":"456","endLine":30,"endColumn":35},{"ruleId":"453","severity":1,"message":"476","line":31,"column":21,"nodeType":"455","messageId":"456","endLine":31,"endColumn":33},{"ruleId":"453","severity":1,"message":"477","line":32,"column":10,"nodeType":"455","messageId":"456","endLine":32,"endColumn":22},{"ruleId":"453","severity":1,"message":"478","line":32,"column":24,"nodeType":"455","messageId":"456","endLine":32,"endColumn":39},{"ruleId":"453","severity":1,"message":"479","line":34,"column":10,"nodeType":"455","messageId":"456","endLine":34,"endColumn":18},{"ruleId":"453","severity":1,"message":"480","line":34,"column":20,"nodeType":"455","messageId":"456","endLine":34,"endColumn":31},{"ruleId":"453","severity":1,"message":"481","line":35,"column":10,"nodeType":"455","messageId":"456","endLine":35,"endColumn":18},{"ruleId":"453","severity":1,"message":"482","line":35,"column":20,"nodeType":"455","messageId":"456","endLine":35,"endColumn":31},{"ruleId":"453","severity":1,"message":"483","line":49,"column":9,"nodeType":"455","messageId":"456","endLine":49,"endColumn":29},{"ruleId":"453","severity":1,"message":"484","line":66,"column":9,"nodeType":"455","messageId":"456","endLine":66,"endColumn":15},{"ruleId":"453","severity":1,"message":"516","line":6,"column":10,"nodeType":"455","messageId":"456","endLine":6,"endColumn":17},{"ruleId":"453","severity":1,"message":"517","line":6,"column":19,"nodeType":"455","messageId":"456","endLine":6,"endColumn":29},{"ruleId":"453","severity":1,"message":"518","line":6,"column":10,"nodeType":"455","messageId":"456","endLine":6,"endColumn":29},{"ruleId":"453","severity":1,"message":"519","line":26,"column":20,"nodeType":"455","messageId":"456","endLine":26,"endColumn":31},{"ruleId":"494","severity":1,"message":"520","line":38,"column":6,"nodeType":"496","endLine":38,"endColumn":16,"suggestions":"521"},{"ruleId":"494","severity":1,"message":"511","line":58,"column":6,"nodeType":"496","endLine":58,"endColumn":18,"suggestions":"522"},{"ruleId":"460","severity":1,"message":"472","line":17,"column":1,"nodeType":"462","endLine":20,"endColumn":2},{"ruleId":"460","severity":1,"message":"472","line":13,"column":1,"nodeType":"462","endLine":13,"endColumn":29},"no-native-reassign",["523"],"no-negated-in-lhs",["524"],"no-unused-vars","'CBadge' is defined but never used.","Identifier","unusedVar","'CLink' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'CDataTable' is defined but never used.","'CPagination' is defined but never used.","'product' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",["523"],["524"],"Assign object to a variable before exporting as module default","'clientId' is assigned a value but never used.","'formErrors' is assigned a value but never used.","'setFormErrors' is assigned a value but never used.","'setFormValid' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'setIsSubmitting' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'handleForgotPassword' is assigned a value but never used.","'submit' is assigned a value but never used.","'setValidOpeningHoursForm' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"forms\"] found.","Property","unnecessarilyComputedProperty",{"range":"525","text":"526"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.","ArrayExpression",["527"],{"range":"528","text":"526"},"'yup' is defined but never used.","React Hook useEffect has a missing dependency: 'onItemUpdated'. Either include it or remove the dependency array. If 'onItemUpdated' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["529"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useInputsChanged' is defined but never used.","'schema' is assigned a value but never used.",["530"],"'setData' is assigned a value but never used.","'setInputsUpdated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data.category'. Either include it or remove the dependency array.",["531"],{"range":"532","text":"526"},["533"],{"range":"534","text":"526"},"'isValid' is assigned a value but never used.","'setIsValid' is assigned a value but never used.","'UseValidateFormData' is defined but never used.","'setValidate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'validateForm'. Either include it or remove the dependency array.",["535"],["536"],"no-global-assign","no-unsafe-negation",[3224,3233],"\"forms\"",{"desc":"537","fix":"538"},[3511,3520],{"desc":"539","fix":"540"},{"desc":"539","fix":"541"},{"desc":"542","fix":"543"},[3220,3229],{"desc":"537","fix":"544"},[3507,3516],{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},"Update the dependencies array to be: [getLocations]",{"range":"549","text":"550"},"Update the dependencies array to be: [data, onItemUpdated]",{"range":"551","text":"552"},{"range":"553","text":"552"},"Update the dependencies array to be: [data.category, inputsUpdated]",{"range":"554","text":"555"},{"range":"556","text":"550"},"Update the dependencies array to be: [validate, validateForm]",{"range":"557","text":"558"},"Update the dependencies array to be: [categories, data.category]",{"range":"559","text":"560"},[1546,1548],"[getLocations]",[1040,1046],"[data, onItemUpdated]",[1224,1230],[2033,2048],"[data.category, inputsUpdated]",[1542,1544],[1034,1044],"[validate, validateForm]",[1507,1519],"[categories, data.category]"]